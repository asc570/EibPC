[MacroLibs]
EnertexWebV2.lib
[ETS-ESF]
// Die aus der ETS3 exportierte ESF-Datei
Haus.esf

[WebServer]
//Visualisierung
page(WohnenID)[$EG$,$Wohnzimmer$]
button(TimeID)[CLOCK]$Uhrzeit$	button(DateID)[DATE]$Datum$  mpshifter(RolloID)[$Türe$,$Fenster$][UP,BLIND,DOWN]$Rollos$ 
line $Schalten und Dimmen$
pbutton(LichterID)[LIGHT]$Deckenlicht$ pbutton(VentiID)[SWITCH]$Ventilator$ pslider(DimmerID)[LIGHT]$WandDimmer$ 
mpshifter(SteckdosenID)[$Fernseher$,$Schrank$,$Wiga$][SWITCH]$Steckdosen$ pslider(WigaDimmerID)[LIGHT]$WigaDimmer$ 
line $Heizen - Fussboden Schaltuhr$ 
pshifter(HeizenID)[ABSENT,PRESENT,NIGHT,ABSENT]$Raumkontroller$ pshifter(SchaltUhrID)[PLUS,MINUS,UP,DOWN]$Heizen ab hh:mm$ 
line
mpchart(VisuHeizID)[DOUBLE,XY]($Heizkörper$,LINE,$Wiga$,LINEDOTS) mpchart(TempVisuID)[DOUBLE,XY]($Temperatur$,LINEDOTS)

[EibPC]
//Definitionen der WebIDs
WohnenID = 1
TimeID = 2
DateID = 3
RolloID = 4
LichterID = 5
VentiID = 6
DimmerID = 7
SteckdosenID = 8
WigaDimmerID = 9
HeizenID = 10
SchaltUhrID = 11
VisuHeizID = 12
TempVisuID = 13

//Initialisierung zur Verringerung der Buslast
Init = after(systemstart(), convert(random(10000u32),0u64))

//Jede Minute wird die Uhrzeit aktualisiert
if stime(0) or Init then webdisplay(TimeID,settime(),CLOCK,DISPLAY,GREEN) endif

//Jeden Tag wird die Datumsanzeige aktualisiert
if change(setdate()) or Init then webdisplay(DateID,setdate(),DATE,DISPLAY,GREEN) endif

//So könnte man jede viertel Stunde die Charts mit Daten füttern
WebZeit=convert(convert(hour(),0f32)+convert(minute(),0f32)/60f32,0f16)
//if (mtime(00,00) or mtime(15,00) or mtime(30,00) or mtime(45,00)) then {
//	mpchart(VisuHeizID,WebZeit,convert("Wohnzimmer-3/1/5",0f16)/2.549f16,0,WohnenID);
//	mpchart(VisuHeizID,WebZeit,convert("Wiga-3/1/13",0f16)/2.549f16,1,WohnenID);
//	mpchart(TempVisuID,WebZeit,"RkWohnzimmerTemp-3/1/28",0,WohnenID)
//} endif

//Charts mit zufälligen Werten füllen, damit man etwas sieht(kann gelöscht werden)
Zeit=0f16
Wo = 80%
Wi = 50%
Temperatur = 23f16
if cycle(0,1) and Zeit < 15f16 then {
	Zeit = Zeit + 1f16;
	Wo = Wo + convert(random(4u32),0%) - convert(random(4u32),0%);
	Wi = Wi + convert(random(4u32),0%) - convert(random(4u32),0%);
	Temperatur = Temperatur + convert(random(3u32),1f16) /10f16 - convert(random(2u32),1f16) / 10f16;
	mpchart(VisuHeizID,Zeit,convert(Wo,0f16)/2.549f16,0,WohnenID);
	mpchart(VisuHeizID,Zeit,convert(Wi,0f16)/2.549f16,1,WohnenID);
	mpchart(TempVisuID,Zeit,Temperatur,0,WohnenID)
} endif

[Macros]
//Realisierung des Sliders, d.h. er wird mit einem Dimmer verbunden
SliderDimmer(DimmerID,WohnenID,"WohnzimmerDimmerWert-1/1/27")
SliderDimmer(WigaDimmerID,WohnenID,"WigaDimmerWert-1/1/11")

//Realisierung des Buttons, d.h. er wird mit einem Aktor und einer Status-GA verbunden
UmschaltButton(LichterID,WohnenID,"WohnzimmerHauptLicht-1/1/13",comobject("WohnzimmerHauptLicht-1/1/13","WohnzimmerAllesAus-1/1/14","EGAlleLichter-1/3/3"),LIGHT)
UmschaltButton(VentiID,WohnenID,"WigaDimmerSchalter-1/1/24",comobject("WigaDimmerSchalter-1/1/24","WohnzimmerAllesAus-1/1/14","EGAlleLichter-1/3/3"),SWITCH)

//Realisierung der Schaltuhr, d.h. sie wird mit einer Freigabevariable verbunden
WebSchaltuhr(SchaltUhrID,WohnenID,FreigabeWiga,12,10)

//Realisierung eines MPButtons mit 3 Einträgen, d.h. er wird mit 3 GAs verbunden
MultipageButton3(SteckerWohnen,SteckdosenID,WohnenID,SWITCH,"WohnzimmerSteckdose1-1/5/9","WohnzimmerSteckdose2-1/5/10","WigaSteckdose-1/5/5")

//Realisierung eines Raumcontrollers, d.h. er wird mit den entsprechenden GAs verbunden
Raumcontroller(HeizenID,WohnenID,"Wohnzimmer-3/1/5","RkWohnzimmer-3/1/8")

//Realisierung der Rollosteuerung, d.h. er wird mit den entsprechenden GAs verbunden
ZweiRollos(RolloID,WohnenID,"WohnzimmerTüre-5/0/32","WohnzimmerTüreStop-5/0/33","WohnzimmerFenster-5/0/35","WohnzimmerFensterStop-5/0/36")