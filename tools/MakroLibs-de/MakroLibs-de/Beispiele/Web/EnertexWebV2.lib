//----------------------------------------------------------------------
//                         Makros für den Enertex EiBPC
//
//  Ziel                 : WebMakros
//
//  Version		 : v1.013
// 
//  Lizens               : Verwendung nur für die Nutzung mit dem 
//                         Enertex EibPC gestattet 
//
//  (C) Copyright        : Enertex Bayern GmbH. All rights reserved.
//
//  Author               : Dr.-Ing. M. Schuster (Enertex Bayern GmbH)
//  Mail                 : schuster@enertex.de
//
//  Dat.Rev.             : $Date: 2016/09/01 09:02:38 $
//  Version              : $Revision: 1.3 $
//----------------------------------------------------------------------

// Schaltuhr für den Webserver: Voraussetzung der Form shifter(ID)[PLUS,MINUS,UP,DOWN]$Schaltuhr$
:begin WebSchaltuhr(ID,PageID,Name,PresetH,PresetM)
:info $Steuert eine Schaltuhr, die über den Webserver angesteuert wird. Es wird eine Freigabevariable (Name = 3.Argument) angelegt, welches als Freigabeobjekt der Schaltuhr dient. Voraussetzung ist ein "pshifter" im Webserver folgender Form(§ mit Dollarzeichen ersetzen): shifter(ID)[PLUS,MINUS,UP,DOWN]§Schaltuhr§ 		Siehe Beispiel WebSchaltuhr.epc$\\
	$ID des pshifters$\\
	$Seiten-ID des pshifters$\\
	$Name der Schaltuhr$\\
	$Voreinstellung der Stunden (0..24)$\\
	$Voreinstellung der Minuten (0..59)$
:shortinfo $Steuert eine Webserver-Schaltuhr$
SchaltuhrH^Name=PresetH
SchaltuhrM^Name=PresetM
if pbutton(ID,PageID)==1 then SchaltuhrH^Name=SchaltuhrH^Name+1 endif
if pbutton(ID,PageID)==2 then if SchaltuhrH^Name==0 then SchaltuhrH^Name = 23 else SchaltuhrH^Name=SchaltuhrH^Name-1  endif endif
if pbutton(ID,PageID)==3 then SchaltuhrM^Name=SchaltuhrM^Name+1 endif
if pbutton(ID,PageID)==4 then if SchaltuhrM^Name==0 then SchaltuhrM^Name=59; SchaltuhrH^Name=SchaltuhrH^Name-1 else SchaltuhrM^Name=SchaltuhrM^Name-1 endif endif
if SchaltuhrH^Name>23 then SchaltuhrH^Name=0 endif
if SchaltuhrM^Name>59 then SchaltuhrM^Name=0;SchaltuhrH^Name=SchaltuhrH^Name+1 endif
if change(SchaltuhrM^Name) or change(SchaltuhrH^Name) or after(systemstart(),10000u64) then {
	pdisplay(ID,$ hh:mm $+stringformat(SchaltuhrH^Name,0,3,2,2)+$:$+stringformat(SchaltuhrM^Name,0,3,2,2),DOWN,INACTIVE,GREEN,PageID) 
} endif
Name=AUS
if chtime(SchaltuhrH^Name,SchaltuhrM^Name,0) then {
	Name=EIN
} else {
	Name=AUS 
} endif

if Name then {
	pdisplay(ID,$ hh:mm $+stringformat(SchaltuhrH^Name,0,3,2,2)+$:$+stringformat(SchaltuhrM^Name,0,3,2,2),DOWN,INACTIVE,GREEN,PageID) 
} else {
	pdisplay(ID,$ hh:mm $+stringformat(SchaltuhrH^Name,0,3,2,2)+$:$+stringformat(SchaltuhrM^Name,0,3,2,2),DOWN,INACTIVE,GREY,PageID)
} endif
:end 

:begin WebSchaltuhrAusfuehren(Freigabetag,Freigabezeit,GA,Wert)
:info $Eine Schaltuhr schreibt ihre Werte. Dabei muss Freigabetag und Freigabezeit vom Datentyp b01 sein$\\
	$Freigabetag: Variable vom Typ b01 (EIN/AUS), im Normalfall die Freigabevariable der WebSchaltuhrTagesWahl$\\
	$Freigabezeit: Variable vom Typ b01 (EIN/AUS), im Normalfall die Freigabevariable der WebSchaltuhr$\\
	$Gruppenaddresse, auf welche ein Wert geschrieben werden soll.$\\
	$Wert, welcher auf die Gruppenadresse geschrieben werden soll.$
:shortinfo $Eine Webserver-Schaltuhr steuert eine GA$
if Freigabetag and Freigabezeit then {
   write(GA, Wert)
} endif
:end 

:begin WebSchaltuhrTagesWahl(FreigabeName,ID,PageID,Montag,Dienstag,Mittwoch,Donnerstag,Freitag,Samstag,Sonntag)
:info $Eine Auswahlbox für eine Webschaltuhr zur Konfiguration des Tages realisieren. Datentyp der Variable mit FreigabeName ist b01 (EIN/AUS).Vorraussetzung dafür ist ein mpshifter folgender Form(§ mit Dollarzeichene ersetzen): mpshifter(DateID)[§Montag§,§Dienstag§,§Mittwoch§,§Donnerstag§,§Freitag§,§Samstag§,§Sonntag§,§----------§,§Werktags§,§Wochenende§,§----------§,§Nie§,§Täglich§][DATE]§Tageswahl§\\
        		Siehe Beispiel WebSchaltuhrTagesWahl.epc$\\
         :$Name der FreigabeVariable$\\
         :$Zahl zwischen 0 und 39 oder ID-Variable des mpshifters$\\
         :$Zahl zwischen 0 und 99 oder ID-Variable der Seite, auf der der mpshifter definiert wurde.$\\
         :$Vorbelegung der Schaltuhr am Montag: EIN oder AUS$\\
         :$Vorbelegung der Schaltuhr am Dienstag: EIN oder AUS$\\
         :$Vorbelegung der Schaltuhr am Mittwoch: EIN oder AUS$\\
         :$Vorbelegung der Schaltuhr am Donnerstag: EIN oder AUS$\\
         :$Vorbelegung der Schaltuhr am Freitag: EIN oder AUS$\\
         :$Vorbelegung der Schaltuhr am Samstag: EIN oder AUS$\\
         :$Vorbelegung der Schaltuhr am Sonntag: EIN oder AUS$
:shortinfo $Implementierung einer Tagesauswahl für eine Schaltuhr$

//----------------------------------
// Implementierung von Name
m_^ID_^PageID_Text=$$
m_^ID_^PageID_ICON=DATE
m_^ID_^PageID_State=INACTIVE
m_^ID_^PageID_Deko=GREY
m_^ID_^PageID_Choice=1
m_^ID_^PageID_Day_1=Montag
m_^ID_^PageID_Day_2=Dienstag
m_^ID_^PageID_Day_3=Mittwoch
m_^ID_^PageID_Day_4=Donnerstag
m_^ID_^PageID_Day_5=Freitag
m_^ID_^PageID_Day_6=Samstag
m_^ID_^PageID_Day_7=Sonntag
m_^ID_^PageID_Day_8=m_^ID_^PageID_Day_1 and m_^ID_^PageID_Day_2 and m_^ID_^PageID_Day_3 and m_^ID_^PageID_Day_4 and m_^ID_^PageID_Day_5
m_^ID_^PageID_Day_9=m_^ID_^PageID_Day_6 and m_^ID_^PageID_Day_7
m_^ID_^PageID_Day_10=AUS 
m_^ID_^PageID_Day_11=m_^ID_^PageID_Day_1 and m_^ID_^PageID_Day_2 and m_^ID_^PageID_Day_3 and m_^ID_^PageID_Day_4 and m_^ID_^PageID_Day_5 and m_^ID_^PageID_Day_6 and m_^ID_^PageID_Day_7


FreigabeName=AUS
if m_^ID_^PageID_Day_1 and dayofweek()==MONDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_2 and dayofweek()==TUESDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_3 and dayofweek()==WEDNESDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_4 and dayofweek()==THURSDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_5 and dayofweek()==FRIDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_6 and dayofweek()==SATURDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_7 and dayofweek()==SUNDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_8 and dayofweek()==WEEKDAY then FreigabeName=EIN endif
if m_^ID_^PageID_Day_9 and dayofweek()==WEEKEND then FreigabeName=EIN endif
if !m_^ID_^PageID_Day_1 and dayofweek()==MONDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_2 and dayofweek()==TUESDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_3 and dayofweek()==WEDNESDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_4 and dayofweek()==THURSDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_5 and dayofweek()==FRIDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_6 and dayofweek()==SATURDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_7 and dayofweek()==SUNDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_8 and dayofweek()==WEEKDAY then FreigabeName=AUS endif
if !m_^ID_^PageID_Day_9 and dayofweek()==WEEKEND then FreigabeName=AUS endif
if FreigabeName then m_^ID_^PageID_State=ACTIVE else m_^ID_^PageID_State=DARKRED endif
if mpbutton(ID,1,PageID)==255 then {
	m_^ID_^PageID_Choice=1
} endif   
if mpbutton(ID,2,PageID)==255 then {
	m_^ID_^PageID_Choice=2
} endif   
if mpbutton(ID,3,PageID)==255 then {
	m_^ID_^PageID_Choice=3
} endif   
if mpbutton(ID,4,PageID)==255 then {
	m_^ID_^PageID_Choice=4
} endif   
if mpbutton(ID,5,PageID)==255 then {
	m_^ID_^PageID_Choice=5
} endif   
if mpbutton(ID,6,PageID)==255 then {
	m_^ID_^PageID_Choice=6
} endif   
if mpbutton(ID,7,PageID)==255 then {
	m_^ID_^PageID_Choice=7
} endif   
if mpbutton(ID,9,PageID)==255 then {
	m_^ID_^PageID_Choice=9
} endif   
if mpbutton(ID,10,PageID)==255 then {
	m_^ID_^PageID_Choice=10
} endif   
if mpbutton(ID,12,PageID)==255 then {
	m_^ID_^PageID_Choice=12
} endif   
if mpbutton(ID,13,PageID)==255 then {
	m_^ID_^PageID_Choice=13
} endif   
if change(m_^ID_^PageID_Text) or change(m_^ID_^PageID_ICON) or change(m_^ID_^PageID_State) or change(m_^ID_^PageID_Deko) or change(m_^ID_^PageID_Choice) or after(systemstart(),convert(random(30000u32),0u64)) then {
	pdisplay(ID,m_^ID_^PageID_Text,m_^ID_^PageID_ICON,m_^ID_^PageID_State,m_^ID_^PageID_Deko,PageID,m_^ID_^PageID_Choice) 
} endif 

if mpbutton(ID,1,PageID)==1 then {
	m_^ID_^PageID_Day_1=!m_^ID_^PageID_Day_1
} endif   
if mpbutton(ID,2,PageID)==1 then {
	m_^ID_^PageID_Day_2=!m_^ID_^PageID_Day_2
} endif   
if mpbutton(ID,3,PageID)==1 then {
	m_^ID_^PageID_Day_3=!m_^ID_^PageID_Day_3
} endif   
if mpbutton(ID,4,PageID)==1 then {
	m_^ID_^PageID_Day_4=!m_^ID_^PageID_Day_4
} endif   
if mpbutton(ID,5,PageID)==1 then {
	m_^ID_^PageID_Day_5=!m_^ID_^PageID_Day_5
} endif   
if mpbutton(ID,6,PageID)==1 then {
	m_^ID_^PageID_Day_6=!m_^ID_^PageID_Day_6
} endif   
if mpbutton(ID,7,PageID)==1 then {
	m_^ID_^PageID_Day_7=!m_^ID_^PageID_Day_7
} endif   
if mpbutton(ID,9,PageID)==1 then {
	m_^ID_^PageID_Day_8=!m_^ID_^PageID_Day_8;
	If m_^ID_^PageID_Day_8 then {
		m_^ID_^PageID_Day_1=EIN;
		m_^ID_^PageID_Day_2=EIN;
		m_^ID_^PageID_Day_3=EIN;
		m_^ID_^PageID_Day_4=EIN;
		m_^ID_^PageID_Day_5=EIN;
		m_^ID_^PageID_Day_6=AUS;
		m_^ID_^PageID_Day_7=AUS;
		m_^ID_^PageID_Day_9=AUS
	} else {
		m_^ID_^PageID_Day_1=AUS;
		m_^ID_^PageID_Day_2=AUS;
		m_^ID_^PageID_Day_3=AUS;
		m_^ID_^PageID_Day_4=AUS;
		m_^ID_^PageID_Day_5=AUS
	} endif
} endif   
if mpbutton(ID,10,PageID)==1 then {
	m_^ID_^PageID_Day_9=!m_^ID_^PageID_Day_9;
	If m_^ID_^PageID_Day_9 then {
		m_^ID_^PageID_Day_1=AUS;
		m_^ID_^PageID_Day_2=AUS;
		m_^ID_^PageID_Day_3=AUS;
		m_^ID_^PageID_Day_4=AUS;
		m_^ID_^PageID_Day_5=AUS;
		m_^ID_^PageID_Day_6=EIN;
		m_^ID_^PageID_Day_7=EIN;
		m_^ID_^PageID_Day_8=AUS
	} else {
		m_^ID_^PageID_Day_6=AUS;
		m_^ID_^PageID_Day_7=AUS
	} endif		
} endif   
if mpbutton(ID,12,PageID)==1 then {
	m_^ID_^PageID_Day_10=!m_^ID_^PageID_Day_10;
	m_^ID_^PageID_Day_1=AUS;
	m_^ID_^PageID_Day_2=AUS;
	m_^ID_^PageID_Day_3=AUS;
	m_^ID_^PageID_Day_4=AUS;
	m_^ID_^PageID_Day_5=AUS;
	m_^ID_^PageID_Day_6=AUS;
	m_^ID_^PageID_Day_7=AUS;
	m_^ID_^PageID_Day_8=AUS;
	m_^ID_^PageID_Day_9=AUS
} endif   
if mpbutton(ID,13,PageID)==1 then {
	m_^ID_^PageID_Day_11=!m_^ID_^PageID_Day_11;
	m_^ID_^PageID_Day_1=EIN;
	m_^ID_^PageID_Day_2=EIN;
	m_^ID_^PageID_Day_3=EIN;
	m_^ID_^PageID_Day_4=EIN;
	m_^ID_^PageID_Day_5=EIN;
	m_^ID_^PageID_Day_6=EIN;
	m_^ID_^PageID_Day_7=EIN;
	m_^ID_^PageID_Day_8=EIN;
	m_^ID_^PageID_Day_9=EIN
} endif  
if m_^ID_^PageID_Day_1 or m_^ID_^PageID_Day_2 or m_^ID_^PageID_Day_3 or m_^ID_^PageID_Day_4 or m_^ID_^PageID_Day_5 or m_^ID_^PageID_Day_6 or m_^ID_^PageID_Day_7 or m_^ID_^PageID_Day_8 or m_^ID_^PageID_Day_9 then {
   m_^ID_^PageID_State=DISPLAY
} else {
   m_^ID_^PageID_State=DARKRED
} endif

if m_^ID_^PageID_Day_1 and m_^ID_^PageID_Choice==1 then { 
	m_^ID_^PageID_Text=$ Tag aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif 
if !m_^ID_^PageID_Day_1 and m_^ID_^PageID_Choice==1 then { 
	m_^ID_^PageID_Text=$ Tag inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 
if m_^ID_^PageID_Day_2 and m_^ID_^PageID_Choice==2 then { 
	m_^ID_^PageID_Text=$ Tag aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif 
if !m_^ID_^PageID_Day_2 and m_^ID_^PageID_Choice==2 then { 
	m_^ID_^PageID_Text=$ Tag inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 
if m_^ID_^PageID_Day_3 and m_^ID_^PageID_Choice==3 then { 
	m_^ID_^PageID_Text=$ Tag aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_3 and m_^ID_^PageID_Choice==3 then { 
	m_^ID_^PageID_Text=$ Tag inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 
if m_^ID_^PageID_Day_4 and m_^ID_^PageID_Choice==4 then { 
	m_^ID_^PageID_Text=$ Tag aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_4 and m_^ID_^PageID_Choice==4 then { 
	m_^ID_^PageID_Text=$ Tag inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 

if m_^ID_^PageID_Day_5 and m_^ID_^PageID_Choice==5 then { 
	m_^ID_^PageID_Text=$ Tag aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_5 and m_^ID_^PageID_Choice==5 then { 
	m_^ID_^PageID_Text=$ Tag inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 

if m_^ID_^PageID_Day_6 and m_^ID_^PageID_Choice==6 then { 
	m_^ID_^PageID_Text=$ Tag aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_6 and m_^ID_^PageID_Choice==6 then { 
	m_^ID_^PageID_Text=$ Tag inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 

if m_^ID_^PageID_Day_7 and m_^ID_^PageID_Choice==7 then { 
	m_^ID_^PageID_Text=$ Tag aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_7 and m_^ID_^PageID_Choice==7 then { 
	m_^ID_^PageID_Text=$ Tag inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 
if m_^ID_^PageID_Day_8 and m_^ID_^PageID_Choice==9 then { 
	m_^ID_^PageID_Text=$ Werktags aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_8 and m_^ID_^PageID_Choice==9 then { 
	m_^ID_^PageID_Text=$ Werktags inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 
if m_^ID_^PageID_Day_9 and m_^ID_^PageID_Choice==10 then { 
	m_^ID_^PageID_Text=$ Wochenenden aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_9 and m_^ID_^PageID_Choice==10 then { 
	m_^ID_^PageID_Text=$ Wochenenden inaktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 
if  m_^ID_^PageID_Choice==12 then { 
	m_^ID_^PageID_Text=$ Alle Tage inaktivieren$;
	m_^ID_^PageID_Deko=GREY
} endif
if  m_^ID_^PageID_Choice==12 and change(m_^ID_^PageID_Day_10) then { 
	m_^ID_^PageID_Text=$ Alle Tage inaktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if m_^ID_^PageID_Day_11 and m_^ID_^PageID_Choice==13 then { 
	m_^ID_^PageID_Text=$ Täglich aktiv$;
	m_^ID_^PageID_Deko=GREEN
} endif
if !m_^ID_^PageID_Day_11 and m_^ID_^PageID_Choice==13 then { 
	m_^ID_^PageID_Text=$ Nicht täglich aktiv$;
	m_^ID_^PageID_Deko=GREY
} endif 

//----------------------------------
:end


:begin MultiButton2(Name, ID, GA1, GA2)
:info $Einen Multibutton (Elemente: mbutton, mshifter)  mit einer zweifachen Auswahlbox ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. \\
Datentyp b01.$\\
         :$Name des Elements$\\
         :$(Zahl zwischen 0 und 39) als ID des Elements$\\
         :$1. Gruppenadresse des Knopfes$\\
         :$2. Gruppenadresse des Knopfes$
:shortinfo $Implementierung eines mbutton oder mshifter mit zwei GA$

//----------------------------------
// Implementierung von Name
m^Name_Text=$AUS$
m^Name_ICON=LIGHT
m^Name_State=ACTIVE
m^Name_Deko=GREY
m^Name_Choice=1
if mbutton(ID,1)==255 then {
	m^Name_Choice=1
} endif   
if mbutton(ID,2)==255 then {
	m^Name_Choice=2
} endif   
if mbutton(ID,3)==255 then {
	m^Name_Choice=3
} endif   
if  change(m^Name_ICON) or change(m^Name_State) or change(m^Name_Deko) or change(m^Name_Choice) then {
	display(ID,m^Name_Text,m^Name_ICON,m^Name_State,m^Name_Deko,m^Name_Choice) 
} endif 

if mbutton(ID,1)==1 then {
	write(GA1,!GA1)
} endif   
if mbutton(ID,2)==1 then {
	write(GA2,!GA2)
} endif   

if GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
//--------------------------------------

:end


:begin MultiButton3(Name, ID, GA1, GA2, GA3)
:info $Einen Multibutton (Elemente: mbutton, mshifter)  mit einer dreifachen Auswahlbox ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. \\
Datentyp b01.$\\
         :$Name des Elements$\\
         :$(Zahl zwischen 0 und 39) als ID des Elements$\\
         :$1. Gruppenadresse des Knopfes$\\
         :$2. Gruppenadresse des Knopfes$\\
         :$3. Gruppenadresse des Knopfes$
:shortinfo $Implementierung eines mbutton oder mshifter mit drei GA$

//----------------------------------
// Implementierung von Name
m^Name_Text=$AUS$
m^Name_ICON=LIGHT
m^Name_State=ACTIVE
m^Name_Deko=GREY
m^Name_Choice=1
if mbutton(ID,1)==255 then {
	m^Name_Choice=1
} endif   
if mbutton(ID,2)==255 then {
	m^Name_Choice=2
} endif   
if mbutton(ID,3)==255 then {
	m^Name_Choice=3
} endif   
if  change(m^Name_ICON) or change(m^Name_State) or change(m^Name_Deko) or change(m^Name_Choice) then {
	display(ID,m^Name_Text,m^Name_ICON,m^Name_State,m^Name_Deko,m^Name_Choice) 
} endif 

if mbutton(ID,1)==1 then {
	write(GA1,!GA1)
} endif   
if mbutton(ID,2)==1 then {
	write(GA2,!GA2)
} endif   
if mbutton(ID,3)==1 then {
	write(GA3,!GA3)
} endif   
if GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif
if !GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
//----------------------------------

:end

:begin MultiButton4(Name, ID, GA1, GA2, GA3, GA4)
:info $Einen Multibutton (Elemente: mbutton, mshifter)  mit einer vierfachen Auswahlbox ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. \\
Datentyp b01.$\\
         :$Name des Elements$\\
         :$(Zahl zwischen 0 und 39) als ID des Elements$\\
         :$1. Gruppenadresse des Knopfes$\\
         :$2. Gruppenadresse des Knopfes$\\
         :$3. Gruppenadresse des Knopfes$\\
         :$4. Gruppenadresse des Knopfes$
:shortinfo $Implementierung eines mbutton oder mshifter mit vier GA$

//----------------------------------
// Implementierung von Name
m^Name_Text=$AUS$
m^Name_ICON=LIGHT
m^Name_State=ACTIVE
m^Name_Deko=GREY
m^Name_Choice=1
if mbutton(ID,1)==255 then {
	m^Name_Choice=1
} endif   
if mbutton(ID,2)==255 then {
	m^Name_Choice=2
} endif   
if mbutton(ID,3)==255 then {
	m^Name_Choice=3
} endif   
if mbutton(ID,4)==255 then {
	m^Name_Choice=4
} endif   
if change(m^Name_ICON) or change(m^Name_State) or change(m^Name_Deko) or change(m^Name_Choice) then {
	display(ID,m^Name_Text,m^Name_ICON,m^Name_State,m^Name_Deko,m^Name_Choice) 
} endif 
if mbutton(ID,1)==1 then {
	write(GA1,!GA1)
} endif   
if mbutton(ID,2)==1 then {
	write(GA2,!GA2)
} endif   
if mbutton(ID,3)==1 then {
	write(GA3,!GA3)
} endif   
if mbutton(ID,4)==1 then {
	write(GA4,!GA4)
} endif   

if GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif
if !GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA4 and m^Name_Choice==4 then { 
	m^Name_Text=$EIN$;
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif
if !GA4 and m^Name_Choice==4 then { 
	m^Name_Text=$AUS$;
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
//----------------------------------

:end


:begin MultipageButton2(Name, ID, PageID, Icon, GA1, GA2)
:info $Einen seitenbezogenen Multibutton (Elemente: mpbutton, mpshifter)  mit einer zweifachen Auswahlbox ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. \\
Datentyp b01.$\\
         :$Name des Elements$\\
         :$Zahl zwischen 0 und 39 oder ID-Variable des Elements$\\
         :$Zahl zwischen 0 und 99 oder ID-Variable der Seite, auf der das Element definiert wurde.$\\
		 :$Darzustellendes Symbol$ \\
         :$1. Gruppenadresse des Knopfes$\\
         :$2. Gruppenadresse des Knopfes$
:shortinfo $Implementierung eines mpbutton oder mpshifter mit zwei GA$
//----------------------------------
// Implementierung von Name
m^Name_Text=$AUS$
m^Name_ICON=Icon
m^Name_State=ACTIVE
m^Name_Deko=GREY
m^Name_Choice=1
if mpbutton(ID,1,PageID)==255 then {
	m^Name_Choice=1
} endif   
if mpbutton(ID,2,PageID)==255 then {
	m^Name_Choice=2
} endif   
if mpbutton(ID,3,PageID)==255 then {
	m^Name_Choice=3
} endif   
if change(m^Name_ICON) or change(m^Name_State) or change(m^Name_Deko) or change(m^Name_Choice) then {
	pdisplay(ID,m^Name_Text,m^Name_ICON,m^Name_State,m^Name_Deko,PageID,m^Name_Choice) 
} endif 

if mpbutton(ID,1,PageID)==1 then {
	write(GA1,!GA1)
} endif   
if mpbutton(ID,2,PageID)==1 then {
	write(GA2,!GA2)
} endif   

if GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
//----------------------------------

:end



:begin MultipageButton3(Name, ID, PageID, Icon, GA1, GA2, GA3)
:info $Einen seitenbezogenen Multibutton (Elemente: mpbutton, mpshifter)  mit einer dreifachen Auswahlbox ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. \\
Datentyp b01.$\\
         :$Name des Elements$\\
         :$Zahl zwischen 0 und 39 oder ID-Variable des Elements$\\
         :$Zahl zwischen 0 und 99 oder ID-Variable der Seite, auf der das Element definiert wurde.$\\
		 :$Darzustellendes Symbol$ \\
         :$1. Gruppenadresse des Knopfes$\\
         :$2. Gruppenadresse des Knopfes$\\
         :$3. Gruppenadresse des Knopfes$
:shortinfo $Implementierung eines mpbutton oder mpshifter mit drei GA$

//----------------------------------
// Implementierung von Name
m^Name_Text=$AUS$
m^Name_ICON=Icon
m^Name_State=ACTIVE
m^Name_Deko=GREY
m^Name_Choice=1
if mpbutton(ID,1,PageID)==255 then {
	m^Name_Choice=1
} endif   
if mpbutton(ID,2,PageID)==255 then {
	m^Name_Choice=2
} endif   
if mpbutton(ID,3,PageID)==255 then {
	m^Name_Choice=3
} endif   
if change(m^Name_ICON) or change(m^Name_State) or change(m^Name_Deko) or change(m^Name_Choice) then {
	pdisplay(ID,m^Name_Text,m^Name_ICON,m^Name_State,m^Name_Deko,PageID,m^Name_Choice) 
} endif 

if mpbutton(ID,1,PageID)==1 then {
	write(GA1,!GA1)
} endif   
if mpbutton(ID,2,PageID)==1 then {
	write(GA2,!GA2)
} endif   
if mpbutton(ID,3,PageID)==1 then {
	write(GA3,!GA3)
} endif   

if GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif
if !GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
//----------------------------------

:end

:begin MultipageButton4(Name, ID, PageID, Icon, GA1, GA2, GA3, GA4)
:info $Einen seitenbezogenen Multibutton (Elemente: mpbutton, mpshifter)  mit einer vierfachen Auswahlbox ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. \\
Datentyp b01.$\\
         :$Name des Elements$\\
         :$Zahl zwischen 0 und 39 oder ID-Variable des Elements$\\
         :$Zahl zwischen 0 und 99 oder ID-Variable der Seite, auf der das Element definiert wurde.$\\
		 :$Darzustellendes Symbol$ \\
         :$1. Gruppenadresse des Knopfes$\\
         :$2. Gruppenadresse des Knopfes$\\
         :$3. Gruppenadresse des Knopfes$\\
         :$4. Gruppenadresse des Knopfes$
:shortinfo $Implementierung eines mpbutton oder mpshifter mit vier GA$

//----------------------------------
// Implementierung von Name
m^Name_Text=$ AUS - $+convert(settime(),$$)
m^Name_ICON=Icon
m^Name_State=ACTIVE
m^Name_Deko=GREY
m^Name_Choice=1
if mpbutton(ID,1,PageID)==255 then {
	m^Name_Choice=1
} endif   
if mpbutton(ID,2,PageID)==255 then {
	m^Name_Choice=2
} endif   
if mpbutton(ID,3,PageID)==255 then {
	m^Name_Choice=3
} endif   
if mpbutton(ID,4,PageID)==255 then {
	m^Name_Choice=4
} endif   
if change(m^Name_ICON) or change(m^Name_State) or change(m^Name_Deko) or change(m^Name_Choice) then {
	pdisplay(ID,m^Name_Text,m^Name_ICON,m^Name_State,m^Name_Deko,PageID,m^Name_Choice) 
} endif 

if mpbutton(ID,1,PageID)==1 then {
	write(GA1,!GA1)
} endif   
if mpbutton(ID,2,PageID)==1 then {
	write(GA2,!GA2)
} endif   
if mpbutton(ID,3,PageID)==1 then {
	write(GA3,!GA3)
} endif   
if mpbutton(ID,4,PageID)==1 then {
	write(GA4,!GA4)
} endif   

if GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA1 and m^Name_Choice==1 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif 
if !GA2 and m^Name_Choice==2 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif
if !GA3 and m^Name_Choice==3 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
if GA4 and m^Name_Choice==4 then { 
	m^Name_Text=$ EIN - $+convert(settime(),$$);
	m^Name_Deko=GREEN;
	m^Name_State=ACTIVE
} endif
if !GA4 and m^Name_Choice==4 then { 
	m^Name_Text=$ AUS - $+convert(settime(),$$);
	m^Name_Deko=GREY;
	m^Name_State=INACTIVE
} endif 
//----------------------------------
:end


:begin Rollo(ID, PageID, GA1, GA1Stop)
:info $Eine Rollosteuerung mit  einem seitenbezogenen Shifter (pshifter) ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. Datentyp b01.\\
Der pshifter sollte folgende Form haben(§ mit Dollarzeichen ersetzen): pshifter(RolloID)[UP,BLIND,DOWN]§Rollo§\\
		siehe Beispiel Rollo.epc$\\
         :$Zahl zwischen 0 und 39 als ID des pshifters$\\
         :$Zahl zwischen 0 und 99 als ID der Seite, auf der der pshifter definiert wurde.$\\
         :$Auf/Ab Gruppenadresse des Rollos$\\
		 :$Stop Gruppenadresse des Rollos$
:shortinfo $Rollosteuerung für einen Rollo$

//----------------------------------
// Implementierung von Name
m_^ID_^PageID_Text=$$
m_^ID_^PageID_ICON=BLIND
m_^ID_^PageID_State=ACTIVE
m_^ID_^PageID_Deko=GREY
if after(systemstart(),3000u64) then pdisplay(ID,m_^ID_^PageID_Text,m_^ID_^PageID_ICON,m_^ID_^PageID_State,m_^ID_^PageID_Deko,PageID)  endif
if change(GA1) then {
   pdisplay(ID,m_^ID_^PageID_Text,STOP,DARKRED,m_^ID_^PageID_Deko,PageID) 
} endif 
if (delay(change(GA1),30000u64) or event(GA1Stop)) then {
	pdisplay(ID,m_^ID_^PageID_Text,m_^ID_^PageID_ICON,m_^ID_^PageID_State,m_^ID_^PageID_Deko,PageID) 
} endif 
if pbutton(ID,PageID)==1 then {
	write(GA1,AUS)
} endif   
if pbutton(ID,PageID)==3 then {
	write(GA1,EIN)
} endif   
if pbutton(ID,PageID)==2 then {
	write(GA1Stop,EIN)
} endif   
:end 

:begin ZweiRollos(ID, PageID, GA1, GA1Stop,GA2, GA2Stop)
:info $Eine Rollosteuerung mit einem seitenbezogenen Multishifter (mpshifter) mit einer zweifachen Auswahlbox ansteuern. Die Gruppenadressen müssen Schaltelemente sein, d.h. Datentyp b01. Der mpshifter sollte von folgender Form sein(§ mit Dollarzeichen ersetzen): mpshifter(RolloID)[§Rollo 1§,§Rollo 2§][UP,BLIND,DOWN]§Rollo§\\
				  siehe auch Beispiel ZweiRollos.epc$\\
         :$Zahl zwischen 0 und 39 als ID des Elements$\\
         :$Zahl zwischen 0 und 99 als ID der Seite, auf der das Element definiert wurde.$\\
         :$Auf/Ab Gruppenadresse des 1. Rollos$\\
		 :$Stop Gruppenadresse des 1. Rollos$\\
		 :$Auf/Ab Gruppenadresse des 2. Rollos$\\
		 :$Stop Gruppenadresse des 2. Rollos$
:shortinfo $Rollosteuerung für 2 Rollos$

//----------------------------------
// Implementierung von Name
m_^ID_^PageID_Text=$$
m_^ID_^PageID_ICON=BLIND
m_^ID_^PageID_State=ACTIVE
m_^ID_^PageID_Deko=GREY
m_^ID_^PageID_Choice=1
if mpbutton(ID,1,PageID)==255 then {
	m_^ID_^PageID_Choice=1
} endif   
if mpbutton(ID,2,PageID)==255 then {
	m_^ID_^PageID_Choice=2
} endif   
if after(systemstart(),3000u64) then pdisplay(ID,m_^ID_^PageID_Text,m_^ID_^PageID_ICON,m_^ID_^PageID_State,m_^ID_^PageID_Deko,PageID,m_^ID_^PageID_Choice)  endif
if (change(GA1) or change(m_^ID_^PageID_Choice)) and m_^ID_^PageID_Choice==1 then {
   pdisplay(ID,m_^ID_^PageID_Text,STOP,DARKRED,m_^ID_^PageID_Deko,PageID,m_^ID_^PageID_Choice) 
} endif 
if (delay(change(GA1),30000u64) or change(m_^ID_^PageID_Choice) or event(GA1Stop)) and m_^ID_^PageID_Choice==1 then {
	pdisplay(ID,m_^ID_^PageID_Text,m_^ID_^PageID_ICON,m_^ID_^PageID_State,m_^ID_^PageID_Deko,PageID,m_^ID_^PageID_Choice) 
} endif 
if (change(GA2) or change(m_^ID_^PageID_Choice)) and m_^ID_^PageID_Choice==2 then {
   pdisplay(ID,m_^ID_^PageID_Text,STOP,DARKRED,m_^ID_^PageID_Deko,PageID,m_^ID_^PageID_Choice) 
} endif 
if (delay(change(GA2),30000u64) or change(m_^ID_^PageID_Choice) or event(GA2Stop)) and m_^ID_^PageID_Choice==2 then {
	pdisplay(ID,m_^ID_^PageID_Text,m_^ID_^PageID_ICON,m_^ID_^PageID_State,m_^ID_^PageID_Deko,PageID,m_^ID_^PageID_Choice) 
} endif 

if mpbutton(ID,1,PageID)==1 then {
	write(GA1,AUS)
} endif   
if mpbutton(ID,1,PageID)==3 then {
	write(GA1,EIN)
} endif   
if mpbutton(ID,1,PageID)==2 then {
	write(GA1Stop,EIN)
} endif   
if mpbutton(ID,2,PageID)==2 then {
	write(GA2Stop,EIN)
} endif   
if mpbutton(ID,2,PageID)==1 then {
	write(GA2,AUS)
} endif   
if mpbutton(ID,2,PageID)==3 then {
	write(GA2,EIN)
} endif   

//----------------------------------

:end

:begin UmschaltButton(ID, PageID, GA, StatusGA, ICON)
:info $Einen seitenbezogenen Button mit (Elemente: pbutton, pshifter) einer Schaltmöglichkeit ansteuern. Beim Knopfdruck wird umgeschalten. \\
Datentyp der Gruppenaddresse b01. Die Schaltzeit der letzten Betätigung wird mit aufgezeichnet. Haben Sie keine Status-Gruppenadresse, geben sie an dieser \\
Stelle einfach nochmals die Schaltgruppenadresse vor. Beachten Sie, dass Statusaddressen eine gewisse Zeit benötigen, bis diese vom Bus aktualisiert \\
zurückgemeldet werden. U.u. ist der Webserver hier schneller als die Rückmeldung und der Status erst nach dem nächsten Refresh angezeigt. Die Anzeige ist für einen Button optimiert.$\\
         :$ID des Elements$\\
         :$SeitenID$\\
         :$Gruppenadresse des EIN/AUS Schaltelements$\\
         :$Status des Aktors$\\
	 :$ICON$
:shortinfo $Implementierung eines Um-Schalters ("Toggle")$
initga(StatusGA)
if pbutton(ID,PageID)==1 then {
   write(GA,!StatusGA)
} endif   
if StatusGA then {
 	pdisplay(ID,settime(),ICON,ACTIVE,GREEN,PageID) 
} else {
 	pdisplay(ID,settime(),ICON,INACTIVE,GREY,PageID) 
} endif
:end


:begin UmschaltButtonZustand(ID, PageID, GA, StatusGA, ICON,Aktiv,InAktiv)
:info $Einen seitenbezogenen Button mit (Elemente: pbutton, pshifter) einer Schaltmöglichkeit ansteuern. Beim Knopfdruck wird umgeschalten. \\
Datentyp der Gruppenaddresse b01. Die Schaltzeit der letzten Betätigung wird mit aufgezeichnet. Haben Sie keine Status-Gruppenadresse, geben sie an dieser \\
Stelle einfach nochmals die Schaltgruppenadresse vor. Beachten Sie, dass Statusaddressen eine gewisse Zeit benötigen, bis diese vom Bus aktualisiert\\
zurückgemeldet werden. U.u. ist der Webserver hier schneller als die Rückmeldung und der Status erst nach dem nächsten Refresh angezeigt. Die Anzeige ist für einen Button optimiert, \\
wobei der ICON-Zustand für EIN und AUS angegeben werden kann$\\
         :$ID des Elements$\\
         :$SeitenID$\\
         :$Gruppenadresse des EIN/AUS Schaltelements$\\
         :$Status des Aktors$\\
	 :$ICON$\\
         :$EIN-Zustand des ICONs$\\
         :$AUS-Zustand des ICONs$
:shortinfo $Implementierung eines Um-Schalters mit Angabe der Zustände des Icons$
initga(StatusGA)
if pbutton(ID,PageID)==1 then {
   write(GA,!StatusGA)
} endif   
if StatusGA then {
 	pdisplay(ID,settime(),ICON,Aktiv,GREEN,PageID) 
} else {
 	pdisplay(ID,settime(),ICON,InAktiv,GREY,PageID) 
} endif
:end

:begin UmschaltShifter(ID, PageID, GA, StatusGA, ICON)
:info $Einen seitenbezogenen Button mit (Elemente: pbutton, pshifter) mit einer Schaltmöglichkeit ansteuern. Beim Knopfdruck wird umgeschalten. \\
Datentyp der Gruppenaddresse b01. Die Schaltzeit der letzten Betätigung wird mit aufgezeichnet. Haben Sie keine Status-Gruppenadresse, geben sie an dieser \\
Stelle einfach nochmals die Schaltgruppenadresse vor. Beachten Sie, dass Statusaddressen eine gewisse Zeit benötigen, bis diese vom Bus aktualisiert\\
zurückgemeldet werden. U.u. ist der Webserver hier schneller als die Rückmeldung und der Status erst nach dem nächsten Refresh angezeigt.$\\
         :$ID des Elements$\\
         :$SeitenID$\\
         :$Gruppenadresse des EIN/AUS Schaltelements$\\
         :$Status des Aktors$\\
	 :$Icon$
:shortinfo $Implementierung eines Um-Schalters mit Datumsangabe$
initga(StatusGA)
if pbutton(ID,PageID)==1 then {
   write(GA,!StatusGA)
} endif   
if StatusGA then {
 	pdisplay(ID,convert(settime(),$$)+ $ am $ + convert(setdate(),$$),ICON,ACTIVE,GREEN,PageID) 
} else {
 	pdisplay(ID,convert(settime(),$$)+ $ am $ + convert(setdate(),$$),ICON,INACTIVE,GREY,PageID) 
} endif
:end

:begin UmschaltShifterZustand(ID, PageID, GA, StatusGA, ICON,Aktiv,InAktiv)
:info $Einen seitenbezogenen Button mit (Elemente: pbutton, pshifter) mit einer Schaltmöglichkeit ansteuern. Beim Knopfdruck wird umgeschalten. \\
Datentyp der Gruppenaddresse b01. Die Schaltzeit der letzten Betätigung wird mit aufgezeichnet. Haben Sie keine Status-Gruppenadresse, geben sie an dieser \\
Stelle einfach nochmals die Schaltgruppenadresse vor. Beachten Sie, dass Statusaddressen eine gewisse Zeit benötigen, bis diese vom Bus aktualisiert\\
zurückgemeldet werden. U.u. ist der Webserver hier schneller als die Rückmeldung und der Status erst nach dem nächsten Refresh angezeigt,wobei der ICON-Zustand für EIN und AUS angegeben werden kann.$\\
         :$ID des Elements$\\
         :$SeitenID$\\
         :$Gruppenadresse des EIN/AUS Schaltelements$\\
         :$Status des Aktors$\\
	 :$Icon$\\
         :$EIN-Zustand des ICONs$\\
         :$AUS-Zustand des ICONs$
:shortinfo $Implementierung eines Um-Schalters mit Datumsangabe und Angabe der Zustände des Icons$
initga(StatusGA)
if pbutton(ID,PageID)==1 then {
   write(GA,!StatusGA)
} endif   
if StatusGA then {
 	pdisplay(ID,convert(settime(),$$)+ $ am $ + convert(setdate(),$$),ICON,Aktiv,GREEN,PageID) 
} else {
 	pdisplay(ID,convert(settime(),$$)+ $ am $ + convert(setdate(),$$),ICON,InAktiv,GREY,PageID) 
} endif
:end

:begin SliderDimmer(ID, PageID, GA)
:info $Ein seitenbezogenen Slider(pslider), der einen Dimmer ansteuert. Die GA ist vom Typ u08 (= Prozenttyp). Das Icon wird dem Zustand angepasst.$\\
         :$ID des psliders$\\
         :$SeitenID des psliders$\\
         :$Gruppenadresse des Dimmers (Prozenttyp)$
:shortinfo $Einen Dimmer mit einem Slider ansteuern$
initga(GA)
InternDimmer_^ID_^PageID=getpslider(ID,PageID)
// Status bei normaler Busänderung
if delay(change(GA),150u64) or systemstart() then InternDimmer_^ID_^PageID=GA endif

if change(InternDimmer_^ID_^PageID) then {
	if InternDimmer_^ID_^PageID!=GA then {
		write(GA,InternDimmer_^ID_^PageID)
	} endif;
	if InternDimmer_^ID_^PageID==0 then {
		setpslider(ID,InternDimmer_^ID_^PageID,LIGHT,INACTIVE,PageID)
	} endif ;
	if InternDimmer_^ID_^PageID>=1 and InternDimmer_^ID_^PageID<50  then {
		setpslider(ID,InternDimmer_^ID_^PageID,LIGHT,STATE4,PageID)
	} endif;
	if InternDimmer_^ID_^PageID>=50 and InternDimmer_^ID_^PageID<100  then {
		setpslider(ID,InternDimmer_^ID_^PageID,LIGHT,STATE5,PageID)
	} endif;
	if InternDimmer_^ID_^PageID>=100 and InternDimmer_^ID_^PageID<200  then {
		setpslider(ID,InternDimmer_^ID_^PageID,LIGHT,STATE6,PageID)
	} endif;
	if InternDimmer_^ID_^PageID>=200  then {
		setpslider(ID,InternDimmer_^ID_^PageID,LIGHT,ACTIVE,PageID)
	} endif
} endif
:end


:begin Raumcontroller(ID, PageID, GA, RkGA)
:info $Einen Raumcontroller im Webinterface mit einem pshifter ansteuern. Der Raumkontroller wird über die 8-Bit Adresse RkGA angesteuert (Umschaltung in Standby,\\
Komfort, Nachtmodus). Über die Gruppenadresse des Heizaktors GA wird ermittelt, ob tatsächlich geheizt wird. Der pshifter sollte folgende Form haben(§ mit Dollarzeichen ersetzen): pshifter(RkID)[ABSENT,PRESENT,NIGHT,ABSENT]§Raumkontroller§						siehe auch Beispiel Raumcontroller.epc $\\
         :$ID des pshifters$\\
         :$SeitenID des pshifters$\\
         :$Gruppenadresse des Heizaktors(Prozenttyp)$\\
		 :$Gruppenadresse des Raumkontrollers (8-Bit Typ)$
:shortinfo $Raumcontroller$
Rk_^ID_^PageID=RkGA
RkSymbol_^ID_^PageID=ABSENT
initga(RkGA)
if pbutton(ID,PageID)==1 then Rk_^ID_^PageID=STANDBY endif
if pbutton(ID,PageID)==2 then Rk_^ID_^PageID=KOMFORT endif
if pbutton(ID,PageID)==3 then Rk_^ID_^PageID=NIGHTMODE endif

if change(Rk_^ID_^PageID) then {	
	write(RkGA,Rk_^ID_^PageID);
	if Rk_^ID_^PageID==KOMFORT then RkSymbol_^ID_^PageID=PRESENT endif;
	if Rk_^ID_^PageID==STANDBY then RkSymbol_^ID_^PageID=ABSENT endif;
	if Rk_^ID_^PageID==NIGHTMODE then RkSymbol_^ID_^PageID=NIGHT endif
} endif 

if (change(RkSymbol_^ID_^PageID) or change(GA)) and GA>0 then {
 	pdisplay(ID,$Es wird geheizt$,RkSymbol_^ID_^PageID,BRIGHTRED,BLINKBLUE,PageID)
} endif 
if (change(RkSymbol_^ID_^PageID) or change(GA)) and GA==0 then {
	pdisplay(ID,$AUS$,RkSymbol_^ID_^PageID,ACTIVE,GREY,PageID)
} endif
:end

:begin Ferienkalender(DayID,MonthID,,FerienID,PageID)
:info $Legt einen Ferienkalender mit Hilfe von 2 mpbuttons und einem shifter im Webserver an. Die Variable "Ferien" zeigt an, ob Ferien sind. Außerdem kann man mit dem Status-Shifter diese Variable manuell schalten. Die buttons sollten folgende Form haben(§ mit Dollarzeichen ersetzen):                        mpbutton(MonthID)[§Januar§,§Februar§,§März§,§April§,§Mai§,§Juni§,§Juli§,§August§,§September§,§Oktober§,§November§,§Dezember§][DATE]§Monat§ \\
mpbutton(DayID)[§1§,§2§,§3§,§4§,§5§,§6§,§7§,§8§,§9§,§10§,§11§,§12§,§13§,§14§,§15§,§16§,§17§,§18§,§19§,§20§,§21§,§22§,§23§,§24§,§25§,§26§,§27§,§28§,§29§,§30§,§31§][DATE]§Tag§           shifter(FerienID)[INFO]§Ferien Status:§                          siehe Beispiel Ferienkalender.epc$\\
	$ID des mpbuttons, mit dem man die Tage auswählt$\\
	$ID des mpbuttons, mit dem man die Monate auswählt$\\
	$ID des shifters, der den Status der Ferien anzeigen soll$\\
	$SeitenID der buttons$
:shortinfo $Visualisiert einen Ferienkalender$

ChoiceMonth = 1
ChoiceDay = 1
Ferien = AUS
FerienText = $$
FerienDeko=GREEN
FerienState=INACTIVE


if mpbutton(MonthID,1,PageID)==255 then ChoiceMonth = 1 endif
if mpbutton(MonthID,2,PageID)==255 then ChoiceMonth = 2 endif
if mpbutton(MonthID,3,PageID)==255 then ChoiceMonth = 3 endif
if mpbutton(MonthID,4,PageID)==255 then ChoiceMonth = 4 endif
if mpbutton(MonthID,5,PageID)==255 then ChoiceMonth = 5 endif
if mpbutton(MonthID,6,PageID)==255 then ChoiceMonth = 6 endif
if mpbutton(MonthID,7,PageID)==255 then ChoiceMonth = 7 endif
if mpbutton(MonthID,8,PageID)==255 then ChoiceMonth = 8 endif
if mpbutton(MonthID,9,PageID)==255 then ChoiceMonth = 9 endif
if mpbutton(MonthID,10,PageID)==255 then ChoiceMonth = 10 endif
if mpbutton(MonthID,11,PageID)==255 then ChoiceMonth = 11 endif
if mpbutton(MonthID,12,PageID)==255 then ChoiceMonth = 12 endif

if mpbutton(DayID,1,PageID)==255 then ChoiceDay = 1 endif
if mpbutton(DayID,2,PageID)==255 then ChoiceDay = 2 endif
if mpbutton(DayID,3,PageID)==255 then ChoiceDay = 3 endif
if mpbutton(DayID,4,PageID)==255 then ChoiceDay = 4 endif
if mpbutton(DayID,5,PageID)==255 then ChoiceDay = 5 endif
if mpbutton(DayID,6,PageID)==255 then ChoiceDay = 6 endif
if mpbutton(DayID,7,PageID)==255 then ChoiceDay = 7 endif
if mpbutton(DayID,8,PageID)==255 then ChoiceDay = 8 endif
if mpbutton(DayID,9,PageID)==255 then ChoiceDay = 9 endif
if mpbutton(DayID,10,PageID)==255 then ChoiceDay = 10 endif
if mpbutton(DayID,11,PageID)==255 then ChoiceDay = 11 endif
if mpbutton(DayID,12,PageID)==255 then ChoiceDay = 12 endif
if mpbutton(DayID,13,PageID)==255 then ChoiceDay = 13 endif
if mpbutton(DayID,14,PageID)==255 then ChoiceDay = 14 endif
if mpbutton(DayID,15,PageID)==255 then ChoiceDay = 15 endif
if mpbutton(DayID,16,PageID)==255 then ChoiceDay = 16 endif
if mpbutton(DayID,17,PageID)==255 then ChoiceDay = 17 endif
if mpbutton(DayID,18,PageID)==255 then ChoiceDay = 18 endif
if mpbutton(DayID,19,PageID)==255 then ChoiceDay = 19 endif
if mpbutton(DayID,20,PageID)==255 then ChoiceDay = 20 endif
if mpbutton(DayID,21,PageID)==255 then ChoiceDay = 21 endif
if mpbutton(DayID,22,PageID)==255 then ChoiceDay = 22 endif
if mpbutton(DayID,23,PageID)==255 then ChoiceDay = 23 endif
if mpbutton(DayID,24,PageID)==255 then ChoiceDay = 24 endif
if mpbutton(DayID,25,PageID)==255 then ChoiceDay = 25 endif
if mpbutton(DayID,26,PageID)==255 then ChoiceDay = 26 endif
if mpbutton(DayID,27,PageID)==255 then ChoiceDay = 27 endif
if mpbutton(DayID,28,PageID)==255 then ChoiceDay = 28 endif
if mpbutton(DayID,29,PageID)==255 then ChoiceDay = 29 endif
if mpbutton(DayID,30,PageID)==255 then ChoiceDay = 30 endif
if mpbutton(DayID,31,PageID)==255 then ChoiceDay = 31 endif

if change(ChoiceMonth) then pdisplay(MonthID,$$,DATE,INACTIVE,GREEN,PageID,ChoiceMonth) endif
if change(ChoiceDay) then pdisplay(DayID,$$,DATE,INACTIVE,GREEN,PageID,ChoiceDay) endif

if button(FerienID) == 1 then Ferien = !Ferien endif
if Ferien then {
	FerienText = $Es sind gerade Ferien$;
	FerienDeko=GREEN;
	FerienState=ACTIVE
} else {
	FerienText = $Es sind gerade keine Ferien$;
	FerienDeko=GREY;
	FerienState=INACTIVE
} endif
	

if change(Ferien) or after(systemstart(),3000u64) then display(FerienID,FerienText,INFO,FerienState,FerienDeko) endif
:end

:begin FerienAusfuehren(Name,BeginID,EndID,PageID,BeginnTag, BeginnMonat, EndeTag, EndeMonat)
:info $Man kann damit Ferien mit dem Ferienkalender realisieren. Man benötigt dafür das Makro Ferienkalender und 2 pshifter folgender Form(§ mit Dollarzeichen ersetzen):            pshifter(BeginID)[INFO]§ Ferienbeginn§ pshifter(EndID)[INFO]§ Ferienende§             siehe Beispiel FerienAusfuehren.epc$\\
	$Name der Ferien$\\
	$ID des shifters, der den Beginn der Ferien anzeigt$\\
	$ID des shifters, der das Ende der Ferien anzeigt$\\
	$SeitenID auf der die shifter sind$\\
	$Tag des Ferienbeginns(z.B. "18" für 18.)$\\
	$Monat des Ferienbeginns(z.B. "10" für Oktober)$\\
	$Tag des Ferienendes(z.B. "18" für 18.)$\\
	$Monat des Ferienendes(z.B. "10" für Oktober)$
:shortinfo $Ferienkalender realisieren$
Name_BeginDay = BeginnTag
Name_EndDay = EndeTag
Name_EndMonth = EndeMonat
Name_BeginMonth = BeginnMonat

if after(systemstart(),3000u64) then {
	pdisplay(BeginID,convert(Name_BeginDay,$$)+$.$+convert(Name_BeginMonth,$$),INFO,ACTIVE,GREEN,PageID);
	pdisplay(EndID,convert(Name_EndDay,$$)+$.$+convert(Name_EndMonth,$$),INFO,ACTIVE,GREEN,PageID)
} endif
	
if pbutton(BeginID,PageID)==1 then {
	pdisplay(BeginID,convert(ChoiceDay,$$)+$.$+convert(ChoiceMonth,$$),INFO,ACTIVE,GREEN,PageID);
	Name_BeginDay=ChoiceDay; Name_BeginMonth=ChoiceMonth
} endif
if pbutton(EndID,PageID)==1 then {
	pdisplay(EndID,convert(ChoiceDay,$$)+$.$+convert(ChoiceMonth,$$),INFO,ACTIVE,GREEN,PageID);
	Name_EndDay=ChoiceDay; Name_EndMonth=ChoiceMonth
} endif

if month(Name_BeginDay,Name_BeginMonth) then Ferien = EIN endif
if month(Name_EndDay,Name_EndMonth) then Ferien = AUS endif
:end

// Sollwertvorgabe auf den BUS
:begin WebWertvorgabeGA(ID,PageID,Name,GA,Max,Min)
:info $Steuert eine Wertvorgabe an eine Gruppenadresse z.B. Temperatursollwert), die über den Webserver angesteuert wird. $\\
	$ID des pshifters$\\
	$Seiten-ID des pshifters$\\
	$Name der Wertvorgabe$\\
	$Gruppenadresse des Werts, diese wird beim Start des EibPC aktualisiert über eine Leseanforderung\\
	$Maximale Verstellung des Werts, z.B. 23.5 $\\
	$Minimale Verstellung des Werts, z.B. 19.5 $ \\
:shortinfo $Steuert eine Webserver-Wertveränderung$
initGA(GA)
Sollwertvorgabe^Name=GA
if pbutton(ID,PageID)==1 then if Sollwertvorgabe^Name<Max^f16 then Sollwertvorgabe^Name=Sollwertvorgabe^Name+(min(1.0,Max^f16-Sollwertvorgabe^Name)) endif endif
if pbutton(ID,PageID)==2 then if Sollwertvorgabe^Name>Min^f16 then Sollwertvorgabe^Name=Sollwertvorgabe^Name-(min(1.0,Sollwertvorgabe^Name-Min^f16)) endif endif
if pbutton(ID,PageID)==3 then if Sollwertvorgabe^Name<Max^f16 then Sollwertvorgabe^Name=Sollwertvorgabe^Name+(min(0.1,Max^f16-Sollwertvorgabe^Name)) endif endif
if pbutton(ID,PageID)==4 then if Sollwertvorgabe^Name>Min^f16 then Sollwertvorgabe^Name=Sollwertvorgabe^Name-(min(0.1,Sollwertvorgabe^Name-Min^f16)) endif endif

if change(Sollwertvorgabe^Name) or after(systemstart(),1u64) then {
	write(GA,Sollwertvorgabe^Name);
	pdisplay(ID,$ Sollwert $+convert(Sollwertvorgabe^Name,$$),DOWN,INACTIVE,GREEN,PageID)
} endif
:end 
