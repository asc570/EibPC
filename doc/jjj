//----------------------------------------------------------------------
/// \file                 	ajax.js
/// \brief               :	Clientseitiges Script zur Verarbeitung der
///								Status-Updates		
///
/// (C) Copyright        : Enertex Bayern GmbH. All rights reserved.
///
/// Author               : M.Grunwald (Enertex Bayern GmbH)
///
/// Mail                 : grunwald@enertex.de
///
/// Dat.Rev.             : $Date: 2014/02/21 16:22:44 $
/// Version              : $Revision: 1.33 $
//----------------------------------------------------------------------

MAX_ANZ_OPEN_CONN = 10;
MAX_ANZ_WAITSTRINGS = 1000;
MS_PER_DAY = 86400000;
MS_PER_MINUTE = 60000;
ERSTBED = 0;
ERSTINIT = 1;
INIT = 2;
DELAYEDINIT = 3;
RELOAD = 4;
RELOAD_NO_CLOS_CONN = 5;
ENABLE_SERVER_HEARTBEAT = 1;
ENABLE_CLIENT_HEARTBEAT = 0;
ENABLE_ERROR_HANDLING = 1;
ZERO_BYTE = "00000000";

var req = null;
var bedienreq = null;
var iwaitpipe = MAX_ANZ_OPEN_CONN;
var sitetoload = -1;
var myJSONObject = {};
var buttons = {};
var images = {};
var firstRefresh = 0;
var refreshTime = 1000;
var buttonChangeTimeout = new Array(200);
var buttonOldIndex = new Array(200);
var chartUpdateLock = 0;
var bedienlock = 1;
var retryCounter = 0;
var waitTimeout;
var erstinitTimeout;
var timeOutNewTimechartValue;
var gDatasetToChange;
var decodedValue = null;


function initAjax(uPage) 
{
	// Mauszeiger-Typ "wait" bis Echtzeitverbindung hergestellt
	document.body.style.cursor = 'wait';
	
	// Eingabefelder einlesen, bevor Cache geleert wird
	var sliders = {};
	var eingabe_st_zeit = {};
	var eingabe_end_zeit = {};
	var slider_values = new Array(40);
	var eingabe_st_zeit_values = new Array(40);
	var eingabe_end_zeit_values = new Array(40);
	
	sliders = document.getElementsByClassName("slider_value");
	eingabe_st_zeit = document.getElementsByClassName("eingabe_startzeit");
	eingabe_end_zeit = document.getElementsByClassName("eingabe_endzeit");
	for(i=0; i<sliders.length; i++)
	{
		slider_values[i] = sliders[i].value;
	}
	for(i=0; i<eingabe_st_zeit.length; i++)
	{
		eingabe_st_zeit_values[i] = eingabe_st_zeit[i].value;
	}
	for(i=0; i<eingabe_end_zeit.length; i++)
	{
		eingabe_end_zeit_values[i] = eingabe_end_zeit[i].value;
	}
	
	// Gecachte Daten loeschen
	document.getElementById("allcomplete").reset();
	
	// Eingabefelder wieder füllen
	for(i=0; i<sliders.length; i++)
	{
		sliders[i].value = slider_values[i];
	}
	for(i=0; i<eingabe_st_zeit.length; i++)
	{
		eingabe_st_zeit[i].value = eingabe_st_zeit_values[i];
	}
	for(i=0; i<eingabe_end_zeit.length; i++)
	{
		eingabe_end_zeit[i].value = eingabe_end_zeit_values[i];
	}
	
	// Eingabefelder daran hindern, durch "Enter" Inhalt abzuschicken
	$(window).keydown(function(event)
	{
		if(event.keyCode == 13) 
		{
			event.preventDefault();
			return false;
		}
	});
	
	// sitetoload zweistellig setzen
	if(uPage<10)
	{
		uPage="0"+uPage;
	}
	sitetoload=uPage;
		
	// Einlesen der Bilder fuer zyklischen Refresh
	images = document.getElementsByClassName("picture");
	
	// Ajax-Cache leeren	
	$.ajaxSetup({ cache: false });	
		
	// XML-HTTP-Request-Objekte erzeugen	
	req = getXMLHttpRequest();
	bedienreq = getXMLHttpRequest();
		
	// timeout wegen Safari-"Waiting"-Problem
	setTimeout("erstbedienung()", 1);
}

function getXMLHttpRequest() 
{
	var httpReq;
	if(window.XMLHttpRequest) 
	{
		httpReq = new XMLHttpRequest();
	} 
	else if(typeof ActiveXObject != "undefined") 
	{
		httpReq = new ActiveXObject("Microsoft.XMLHTTP");
		alert("MSIE XHR Objekt erzeugt");
	}
	return httpReq;
}

function erstbedienung() 
{
	if(bedienreq==null)
	{
		bedienreq = getXMLHttpRequest();
	}
	bedienreq.onreadystatechange = erstbedienresponse;
	bedienreq.open("post", "controlDaemon?99"+sitetoload+"0000"+ZERO_BYTE+ZERO_BYTE+ZERO_BYTE+ZERO_BYTE, true);
	bedienreq.send(null);
}

function erstbedienresponse() 
{
	if(bedienreq.readyState==4) 
	{
		var antwort = bedienreq.responseText;

		if(antwort=="error")
		{
			if(ENABLE_ERROR_HANDLING==1)
			{
				errorHandler(ERSTBED);
			}
		}
		else
		{
			erstinit();
		}
	}
}

function erstinit() 
{
	if(req==null)
	{
		req = getXMLHttpRequest();
	}
	req.onreadystatechange = erstinitresponse;
	req.open("post", "erstinit", true);
	req.send(null);
	if(ENABLE_ERROR_HANDLING==1)
	{
		erstinitTimeout = window.setTimeout("errorHandler(ERSTBED)", 2000);
	}
}

function erstinitresponse()
{
	if(req.readyState==4) 
	{
		if(ENABLE_SERVER_HEARTBEAT==1)
		{
			window.clearTimeout(erstinitTimeout);
		}
		var antwort = req.responseText;
		console.debug("erstinit response erhalten: "+antwort);

		if(antwort.charAt(0)=="{")
		{
			antwort = antwort.replace(/(\r\n|\n|\r)/gm,"");
			myJSONObject = JSON.parse(antwort);
			var site = Number(myJSONObject.iPageToLoad);
			if(site<10)
			{
				site = '0'+site;
			}
			if(site!=sitetoload)
			{
				errorHandler(ERSTINIT);
				return;
			}
			iwaitpipe = Number(myJSONObject.waitpipe);
			
			if(ENABLE_CLIENT_HEARTBEAT==1)
			{
				sendClientHeartbeat();
			}
			
			init();
		}
		else
		{
			if(ENABLE_ERROR_HANDLING==1)
			{
				errorHandler(ERSTINIT);
			}
		}		
	}
}

function init() 
{
	if(iwaitpipe<MAX_ANZ_OPEN_CONN)
	{
		if(bedienreq==null)
		{
			bedienreq = getXMLHttpRequest();
		}
		req.onreadystatechange = response;
		req.open("post", "wait?"+iwaitpipe, true);
		req.send(null);
		if((ENABLE_SERVER_HEARTBEAT==1)&&(ENABLE_ERROR_HANDLING==1))
		{
			waitTimeout = window.setTimeout("errorHandler(ERSTBED)", 17000);
		}
	}
	else
	{
		erstbedienung();
	}
}

function response() 
{
	document.body.style.cursor = 'default';
	
	// Mauszeiger ueber Buttons aendern
	buttons = $('[id^=Button]');
	for(i=0; i<buttons.length; i++)
	{
		buttons[i].style.cursor = 'pointer';
	}
	
	bedienlock = 0;
	
	if(req.readyState==4) 
	{	
		if(ENABLE_SERVER_HEARTBEAT==1)
		{
			window.clearTimeout(waitTimeout);
		}
		
		var antwort = req.responseText;
		
		if(antwort=="!reconnect")
		{
			if(ENABLE_ERROR_HANDLING==1)
			{
				errorHandler(ERSTBED);
			}
		}
		else if(antwort=="waiterror")
		{
			if(ENABLE_ERROR_HANDLING==1)
			{
				errorHandler(INIT);
			}
		}
		else if(antwort=="!dummy")
		{
			init();
		}
		else if(antwort.charAt(0)=="{")
		{
			antwort = antwort.replace(/(\r\n|\n|\r)/gm,"");
			
			var JSONparts = new Array(MAX_ANZ_WAITSTRINGS);
						
			JSONparts = antwort.split("}");
			
			var jsonElementCounter=0;
			for(jsonElementCounter=0; jsonElementCounter<MAX_ANZ_WAITSTRINGS; jsonElementCounter++)
			{	
				if(JSONparts[jsonElementCounter]==null) break;
			
				if(JSONparts[jsonElementCounter].charAt(0)=='{')
				{
					if(JSONparts[jsonElementCounter].charAt(JSONparts[jsonElementCounter].length-1)!="}")
					{
						JSONparts[jsonElementCounter]=JSONparts[jsonElementCounter]+'}';
					}
					
					myJSONObject = JSON.parse(JSONparts[jsonElementCounter]);
			
					if(myJSONObject.site==Number(sitetoload))
					{
						if(myJSONObject.id=="alive")
						{
							continue;
						}
						else
						{
							if(myJSONObject.id.slice(0,16)=="WebElementOutput")
							{
								try {
									decodedValue = decodeURIComponent(myJSONObject.value);
									refresh(myJSONObject.id, myJSONObject.status, decodedValue, myJSONObject.valueDec, myJSONObject.uSelection);
								} catch (ex) {
									//alert("ERROR DECODING URI: " + ex.message);
									refresh(myJSONObject.id, myJSONObject.status, myJSONObject.value, myJSONObject.valueDec, myJSONObject.uSelection);
								}
							}
							else
							{
								refresh(myJSONObject.id, myJSONObject.status, myJSONObject.value, myJSONObject.valueDec, myJSONObject.uSelection);
							}
						}
					}
					else
					{
						continue;
					}
				}
				else
				{
					continue;
				}
			}
			init();
		}	
		else
		{
			if(ENABLE_ERROR_HANDLING==1)
			{
				errorHandler(DELAYEDINIT);
			}
		}
	}
	else if(req.status==500)
	{
		init();
	}
}

function refresh(id, status, nvalue, valueDec, selIndex) 
{
	// Time- oder Multichart?
	if(((id.charAt(10)=='T')&&(id.charAt(14)=='C'))||((id.charAt(10)=='M')&&(id.charAt(15)=='C')))
	{
		clearTimeout(timeOutNewTimechartValue);
		
		var valueparts = new Array(2);
		valueparts = nvalue.split(",");
		
		var xValue = Number(valueparts[0]);
		var yValue = Number(valueparts[1]);
		
		var wertepaar = new Array(2);
		wertepaar[0] = xValue;
		wertepaar[1] = yValue;
		
		var strToEval1 = "var dataSetToChange ="+"Data"+id+"_"+status;
		
		try {
			eval(strToEval1);
		} catch (e) {
			//alert(e.message);
		}
		
		if(dataSetToChange!=null)
		{
			// MultiChart
			if(id.charAt(10)=='M')
			{
				if(dataSetToChange.length>48)
				{
					dataSetToChange.shift();
					dataSetToChange.push(wertepaar);
				}
				else
				{
					dataSetToChange.push(wertepaar);
				}
			}
			// TimeChart
			else
			{
				/*
				var strToEval3 = "var anzWerte ="+id+"_Values";
				try {
					eval(strToEval3);
				} catch (e) {
					//alert(e.message);
				}
				*/
				if(dataSetToChange.length>256)
				{
					dataSetToChange.shift();
					dataSetToChange.push(wertepaar);
				}
				else
				{
					dataSetToChange.push(wertepaar);
				}
			}
			
			if(gDatasetToChange!=strToEval1)
			{
				//alert("Update Chart (neues dataset an der reihe); dataset: "+dataSetToChange); 
				dataSetToChange.sort(sortDatasetArray); 
				var strToEval2 = "update"+id+"()"; 
				eval(strToEval2);
				gDatasetToChange = strToEval1;
			}
			else
			{			
				timeOutNewTimechartValue = setTimeout(function(){dataSetToChange.sort(sortDatasetArray); var strToEval2 = "update"+id+"()"; eval(strToEval2);},100);
			}
			
		}
		
	}
						
	else
	{
		// Existiert das Element?
		if((document.getElementById("Button"+id)!=null)||(document.getElementById("Button1"+id)!=null)||(document.getElementsByName("Text"+id)[0]!=null))
		{
			if((id.slice(0,17)=="WebElementDouble2")||(id.slice(0,17)=="WebElementDouble3")||(id.slice(0,22)=="WebElementMultiDouble2")||(id.slice(0,22)=="WebElementMultiDouble3"))
			{
				//clearButtonChangeTimeout(id);
				var mediasetnr = document.getElementById("Button2"+id).src.substring(document.getElementById("Button2"+id).src.length-11,document.getElementById("Button2"+id).src.length-9);
				document.getElementById("Button2"+id).src = "/mediaset"+mediasetnr+"/"+status+".png";
			}
			else if((id.slice(0,17)=="WebElementDouble4")||(id.slice(0,22)=="WebElementMultiDouble4"))
			{
				//clearButtonChangeTimeout(id);
				var mediasetnr = document.getElementById("Button4"+id).src.substring(document.getElementById("Button4"+id).src.length-11,document.getElementById("Button4"+id).src.length-9);
				document.getElementById("Button4"+id).src = "/mediaset"+mediasetnr+"/"+status+".png";
			}
			
			// Normalfall:
			else
			{
				if(document.getElementById("Button"+id)!=null)
				{
					clearButtonChangeTimeout(id);
					var mediasetnr;
					mediasetnr = document.getElementById("Button"+id).src.substring(document.getElementById("Button"+id).src.length-11,document.getElementById("Button"+id).src.length-9);
					document.getElementById("Button"+id).src = "/mediaset"+mediasetnr+"/"+status+".png";
					
					if(id.slice(0,21)=="WebElementMultiDouble")
					{
						document.getElementById(id).selectedIndex = selIndex-1;
					}
				}
			}
			
			// Aenderung Text-Wert
			var zValue;
			if(zValue = document.getElementsByName("Text"+id)[0])
			{
				if(id.slice(0,16)=="WebElementSlider" || id.slice(0,24)=="WebElementExtendedSlider")
				{
					//$('#'+id).slider("value", nvalue);
					$('#'+id).slider("value", Number(nvalue).toString(10));
				}	
				else if(id.slice(0,16)=="WebElementOutput")
				{
					zValue.innerHTML="<br>"+nvalue;
				}
				else if(id.slice(0,22)=="WebElementInternalLink")
				{
					var LINKparts = new Array(2);
					LINKparts = nvalue.split("(");
					zValue.innerHTML=LINKparts[0];
					//document.getElementById("Link"+id).href="/visu/index?"+LINKparts[1];
					document.getElementById("Button"+id).onclick = function(){loadNewPage("Button"+id,LINKparts[1].toString(16));};
				}
				else if(id.slice(0,22)=="WebElementExternalLink")
				{
					var LINKparts = new Array(2);
					LINKparts = nvalue.split("(");
					zValue.innerHTML=LINKparts[0];
					//document.getElementById("Link"+id).href=LINKparts[1];
					document.getElementById("Button"+id).onclick = function(){loadNewPage("Button"+id,LINKparts[1]);};
				}
				
				else if(id.slice(0,25)=="WebElementExternalPicture")
				{
					var PICTUREparts = new Array(2);
					PICTUREparts = nvalue.split("(");
					zValue.innerHTML=PICTUREparts[0];
					document.getElementById(id).src=PICTUREparts[1];
				}
				else
				{	
					zValue.innerHTML=nvalue;
					var newClass = "text_0"+valueDec;
					zValue.setAttribute("class", newClass);
				}
			}
		}
	}
}

function bedienung(msgToDaemon) 
{
	if(bedienlock!=1)
	{
		if(bedienreq==null)
		{
			bedienreq = getXMLHttpRequest();
		}
		bedienreq.onreadystatechange = bedienresponse;
		bedienreq.open("post", "controlKNX?"+msgToDaemon, true);
		bedienreq.send(null);
	}
}

function bedienresponse() 
{
	if(bedienreq.readyState==4) 
	{
		var antwort = bedienreq.responseText;
		//var text1 = document.getElementById("textfeld");
		//text1.value = antwort;
	}
}

function errorHandler(verhalten)
{
	if(verhalten==ERSTBED)
	{
		if(retryCounter<5)
		{
			setTimeout("erstbedienung()",1000);
			retryCounter++;
		}
		else
		{
			errorHandler(RELOAD_NO_CLOS_CONN);
		}
		
	}
	else if(verhalten==ERSTINIT)
	{
		if(retryCounter<5)
		{
			setTimeout("erstinit()",500);
			retryCounter++;
		}
		else
		{
			errorHandler(RELOAD_NO_CLOS_CONN);
		}
	}
	else if(verhalten==INIT)
	{
		setTimeout("init()",100);
	}
	else if(verhalten==DELAYEDINIT)
	{
		setTimeout("init()",2000);
	}
	else if(verhalten==RELOAD)
	{
		closeConnection();
		setTimeout("reloadPage()",1000);
	}
	else if(verhalten==RELOAD_NO_CLOS_CONN)
	{
		setTimeout("reloadPage()",1000);
	}
	else
	{
		alert("error behavior not defined");
	}
}

function reloadPage()
{
	top.location.reload(true);
}

function closeConnection() 
{
	if(bedienreq==null)
	{
		bedienreq = getXMLHttpRequest();
	}
	bedienreq.onreadystatechange = closeresponse;
	
	// Fehlerfall (iwaitpipe noch nicht gesetzt)
	if(iwaitpipe==MAX_ANZ_OPEN_CONN)
	{
		bedienreq.open("post", "controlDaemon?88110000"+ZERO_BYTE+ZERO_BYTE+ZERO_BYTE+ZERO_BYTE, true);
	}
	
	// Normalfall
	else
	{
		bedienreq.open("post", "controlDaemon?88"+iwaitpipe+"00000"+ZERO_BYTE+ZERO_BYTE+ZERO_BYTE+ZERO_BYTE, true);
	}
	
	bedienreq.send(null);
}

function closeresponse() 
{
	if(bedienreq.readyState==4) 
	{
		var antwort = bedienreq.responseText;
		//var text1 = document.getElementById("textfeld");
		//text1.value = antwort;
	}
}

function multibuttonHandler(index, page, multibutton, selectedElement, anzButtons)
{
	for(buttonIndex=1; buttonIndex<=Number(anzButtons); buttonIndex++)
	{
		var elToChange;
		if((multibutton.name.slice(0,22)=="WebElementMultiDouble1")||(multibutton.name.slice(0,21)=="WebElementMultiSingle"))
		{
			elToChange = document.getElementById("Button"+multibutton.name);
		}
		else
		{
			elToChange = document.getElementById("Button"+buttonIndex+multibutton.name);
		}
		
		var param1, param2;
		if((Number(selectedElement)<10)&&(Number(page)<10))
		{
			param1 = "0"+selectedElement;
			param2 = "0"+page;
		}
		else if((Number(selectedElement)>=10)&&(Number(page)<10))
		{
			param1 = selectedElement;
			param2 = "0"+page;
		}
		else if((Number(selectedElement)<10)&&(Number(page)>=10))
		{
			param1 = "0"+selectedElement;
			param2 = page;
		}
		else if((Number(selectedElement)>=10)&&(Number(page)>=10))
		{
			param1 = selectedElement;
			param2 = page;
		}
		
		if(elToChange!=null)
		{
			switch(buttonIndex)
			{		
				case 1:	if((multibutton.name.slice(0,22)=='WebElementMultiDouble1')||(multibutton.name.slice(0,21)=='WebElementMultiSingle'))
							{
								elToChange.onclick = function(){swapButton('Button'+multibutton.name,1);bedienung(index+'+'+'01'+'+'+param1+'+'+param2);};
							}
							else
							{
								elToChange.onclick = function(){swapButton('Button1'+multibutton.name,1);bedienung(index+'+'+'01'+'+'+param1+'+'+param2);};
							}
							break;
				case 2:	elToChange.onclick = function(){swapButton('Button2'+multibutton.name,1);bedienung(index+'+'+'02'+'+'+param1+'+'+param2);}; break;
				case 3:	elToChange.onclick = function(){swapButton('Button3'+multibutton.name,1);bedienung(index+'+'+'03'+'+'+param1+'+'+param2);}; break;
				case 4:	elToChange.onclick = function(){swapButton('Button4'+multibutton.name,1);bedienung(index+'+'+'04'+'+'+param1+'+'+param2);}; break;
			}
		}									
	}
}

function pictureRefresh(uRefreshTime)
{
	if(firstRefresh==0)
	{
		refreshTime = uRefreshTime*1000;
		firstRefresh = 1;
	}
	var timestamp = new Date().getTime();
	for(imageIndex=0; imageIndex<images.length; imageIndex++)
	{
		var imgSrc = images[imageIndex].src;
		if(imgSrc.indexOf("#")!=-1)
		{
			//images[imageIndex].src = imgSrc+"?"+Math.random();
			images[imageIndex].src = imgSrc.substring(0,imgSrc.indexOf("#"))+"#"+timestamp;
		}
		else
		{
			images[imageIndex].src = imgSrc+"#"+timestamp;
		}
	}
	setTimeout("pictureRefresh()", refreshTime);
}

function timeChartOffset(chart, graphId, daysOffset)
{
	var strToEval;
	strToEval = "var dataSetToChange ="+"Data"+chart+"_"+graphId;
	try {
		eval(strToEval);
	} catch (e) {
		//alert(e.message);
	}
	
	if(dataSetToChange != null)
	{
		var i=0;
		for(i=0; i<dataSetToChange.length; i++)
		{
			dataSetToChange[i][0] = dataSetToChange[i][0] + Number(daysOffset)*MS_PER_DAY;
		}
		strToEval = "update"+chart+"()";
		eval(strToEval)
	}
	
	strToEval = "offsetOutput ="+chart+"_Offset_"+graphId;
	try {
		eval(strToEval);
	} catch (e) {
		//alert(e.message);
	}
	if(offsetOutput != null)
	{
		offsetOutput.innerHTML = parseInt(offsetOutput.innerHTML) + Number(daysOffset);
	}
}
	
function changeToDateString(epoch) 
{
	var year = epoch.getFullYear();
	var month = Number(epoch.getMonth()+1);
	var day = epoch.getDate();
	if(month<10) 
	{
		month = '0'+month;
	}
	if(day<10)
	{
		day = '0'+day;
	}
	return year + "-" + month + "-" + day;
}
	
function changeToEpoch(inputfield)
{
	var epoch = new Date(inputfield.value).getTime();
	if(isNaN(epoch)) 
	{
		inputfield.style.background = "#DF0101";
		return "00";
	}
	else
	{
		inputfield.style.background = "#DDDDDD";
		var fieldID = $(inputfield).attr('id');
		if(fieldID.charAt(5)=='E')
		{
			return epoch+MS_PER_DAY;
		}
		else
		{
			return epoch;
		}
	}
}

String.prototype.replaceAt=function(index, character) 
{
	return this.substr(0, index) + character + this.substr(index+character.length);
};
 
function getIndexOfElementInButtons(element)
{
	var buttonElement;
	if(typeof element == "string")
	{
		buttonElement = document.getElementById(element);
	}
	else
	{
		buttonElement = element;
	}
	for(i=0; i<buttons.length; i++)
	{
		if(buttons[i].id == buttonElement.id) return i;
	}
	return -1;
} 
 
function swapButton(button, forceChange)
{
	if(bedienlock!=1)
	{
		var buttonElement;
		if(typeof button == "string")
		{
			buttonElement = document.getElementById(button);
		}
		else
		{
			buttonElement = button;
		}
		var buttonElementIndex = getIndexOfElementInButtons(buttonElement);
		
		// Button zwingend aendern wenn forceChange == 1 (bei Erstaufruf)
		if(forceChange == 1)
		{
			var oldSource = buttonElement.src;
			var newSource;
			var indexToChange = oldSource.length-5;
			
			buttonOldIndex[buttonElementIndex] = oldSource.charAt(indexToChange);
			
			if((button.id=="ButtonLinks")||(button.id=="ButtonRechts"))
			{
				newSource = oldSource.replaceAt(indexToChange, "2");
			}
			else if((oldSource.charAt(indexToChange)=="1")||(oldSource.charAt(indexToChange)=="2"))
			{
				newSource = oldSource.replaceAt(indexToChange, "3");
			}
			else if(oldSource.charAt(indexToChange)=="0")
			{
				newSource = oldSource.replaceAt(indexToChange, "9");
			}
			else if(oldSource.charAt(indexToChange)=="9")
			{
				newSource = oldSource.replaceAt(indexToChange, "0");
			}
			else
			{
				newSource = oldSource.replaceAt(indexToChange, "1");
			}
			buttonElement.src = newSource;
			
			// Image nicht vorhanden:
			buttonElement.onerror = function(){
				
				if(oldSource.charAt(indexToChange)=="1")
				{
					buttonElement.src = newSource.replaceAt(indexToChange, "2");
				}
				else if(oldSource.charAt(indexToChange)=="2")
				{
					buttonElement.src = newSource.replaceAt(indexToChange, "1");
				}
				else
				{
					buttonElement.src = newSource.replaceAt(indexToChange, "1");
				}
			};
			
			buttonChangeTimeout[buttonElementIndex] = setTimeout(function(){swapButton(buttonElement, 0)}, 100);
		}
		
		// Bei rekursivem Aufruf
		else 
		{
			// Checken ob der buttonElement in der Zwischenzeit vom Daemon aktualisiert wurde, wenn nein, an dieser Stelle zurueckswitchen
			var oldSource = buttonElement.src;
			var newSource;
			var indexToChange = oldSource.length-5;
			newSource = oldSource.replaceAt(indexToChange, buttonOldIndex[buttonElementIndex]);
			buttonElement.src = newSource;
		}
	}
}

function clearButtonChangeTimeout(id)
{
	if((id.slice(0,17)=="WebElementDouble2")||(id.slice(0,22)=="WebElementMultiDouble2"))
	{
		var buttonIndex = getIndexOfElementInButtons("Button1"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
		buttonIndex = getIndexOfElementInButtons("Button2"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
	}
	else if((id.slice(0,17)=="WebElementDouble3")||(id.slice(0,22)=="WebElementMultiDouble3"))
	{
		var buttonIndex = getIndexOfElementInButtons("Button1"+id);
		//clearTimeout(buttonChangeTimeout[buttonIndex]);
		buttonIndex = getIndexOfElementInButtons("Button2"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
		buttonIndex = getIndexOfElementInButtons("Button3"+id);
		//clearTimeout(buttonChangeTimeout[buttonIndex]);
	}
	else if((id.slice(0,17)=="WebElementDouble4")||(id.slice(0,22)=="WebElementMultiDouble4"))
	{
		var buttonIndex = getIndexOfElementInButtons("Button1"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
		buttonIndex = getIndexOfElementInButtons("Button2"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
		buttonIndex = getIndexOfElementInButtons("Button3"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
		buttonIndex = getIndexOfElementInButtons("Button4"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
	}
	else
	{
		var buttonIndex = getIndexOfElementInButtons("Button"+id);
		clearTimeout(buttonChangeTimeout[buttonIndex]);
	}	
}

function clearDataset(dataset,anzGraphs)
{
	
	var strToEval;
	var chartId;
	
	// !=d5 -> clear one dataset (d1,d2,d3 oder d4)
	if(dataset.charAt(dataset.length-1)!='5')
	{
		strToEval = "var dataSetToClear ="+dataset;
		try {
			eval(strToEval);
		} catch (e) {
			//alert(e.message);
		}
		dataSetToClear.length = 0;
		
		chartId = dataset.slice(4,25);
		strToEval = "update"+chartId+"()";
		eval(strToEval);
	}
	
	// ==d5 -> clear all datasets (d1-d4)
	else
	{
		var datasetToChangeIndex = 0;
		for(graphCounter=1; graphCounter<=Number(anzGraphs);graphCounter++)
		{
			datasetToChangeIndex = dataset.substring(0,dataset.length-1)+graphCounter;
			strToEval = "var dataSetToClear ="+datasetToChangeIndex;
			try {
				eval(strToEval);
			} catch (e) {
				//alert(e.message);
			}
			dataSetToClear.length = 0;
			
			chartId = dataset.slice(4,25);
			strToEval = "update"+chartId+"()";
			eval(strToEval);
		}
	}
	
}

function sortDatasetArray(a, b)
{
	return a[0] > b[0] ? 1 :
	a[0] < b[0] ? -1 :
	0;
}

function checkInputstring(inputstring)
{
	return inputstring.replace(/[+]/g, "%2b");
}

function loadNewPage(buttonID,uPage)
{
	closeConnection();
	
	if(bedienlock!=1)
	{
		setTimeout(function()
		{
			swapButton(buttonID,1);
		
			setTimeout(function()
			{
				if(uPage.length<=2)
				{
					window.open("/visu/index?"+uPage, '_self');
				}
				else
				{
					window.open(uPage, '_self');
				}
			}, 200);
		}, 100);
	}
}

function completeTimechartUpdate(uPage,uChartID,uGraphID,uLimitLeft,uLimitRight) 
{
	if(bedienreq==null)
	{
		bedienreq = getXMLHttpRequest();
	}
	//alert("77"+uPage+uChartID);
	bedienreq.onreadystatechange = responseCompleteTimechartUpdate;
	bedienreq.open("post", "controlDaemon?77"+uPage+uChartID+uGraphID+'0'+uLimitLeft+'0'+uLimitRight+'00000', true);
	bedienreq.send(null);
}

function responseCompleteTimechartUpdate() 
{
	if(bedienreq.readyState==4) 
	{
		var antwort = bedienreq.responseText;
		//var text1 = document.getElementById("textfeld");
		//text1.value = antwort;
	}
}

function sendClientHeartbeat()
{
	if(bedienreq==null)
	{
		bedienreq = getXMLHttpRequest();
	}
	bedienreq.onreadystatechange = responseClientHeartbeat;
	bedienreq.open("post", "controlDaemon?66"+sitetoload+iwaitpipe+"000"+ZERO_BYTE+ZERO_BYTE, true);
	bedienreq.send(null);
	setTimeout("sendClientHeartbeat()",5000);

}

function responseClientHeartbeat()
{
	if(bedienreq.readyState==4) 
	{
		var antwort = bedienreq.responseText;
		//var text1 = document.getElementById("textfeld");
		//text1.value = antwort;
	}
}

function getOffsetToUTC()
{
	var myDate = new Date();
	return (myDate.getTimezoneOffset()*MS_PER_MINUTE);
}

function changeMinMaxDrowdown(drowdownID,dataset,chartID,uPageNumber,uElementIndex,anzGraphs)
{
	var leftLimit = 0;
	var rightLimit = 0;
	var leftLimitLocal = 0;
	var rightLimitLocal = 0;
	var timestampNow = new Date();
	var nowUTC = timestampNow.getTime();
	rightLimit = nowUTC;
	
	// Tag
	if(drowdownID.selectedIndex == 1)
	{
		leftLimit = Number(nowUTC) - MS_PER_DAY;
	}
	// Woche
	else if(drowdownID.selectedIndex == 2)
	{
		leftLimit = nowUTC - 7*MS_PER_DAY;
	}
	// Monat
	else if(drowdownID.selectedIndex == 3)
	{
		leftLimit = nowUTC - 30*MS_PER_DAY;
	}
	// Jahr
	else if(drowdownID.selectedIndex == 4)
	{
		leftLimit = nowUTC - 365*MS_PER_DAY;
	}
	else
	{
		return;
	}
	
	leftLimitLocal = leftLimit - getOffsetToUTC();
	rightLimitLocal = rightLimit - getOffsetToUTC();
	
	clearDataset(dataset+'5',anzGraphs);
	completeTimechartUpdate(uPageNumber,uElementIndex,'4',leftLimitLocal,rightLimitLocal);
	setTimeout(function()
	{
		bedienung(chartID+'+00+'+leftLimit+'+'+rightLimit+'+00');
		if(Number(anzGraphs)>1)
		{
			setTimeout(function()
			{
				bedienung(chartID+'+01+'+leftLimit+'+'+rightLimit+'+00');
				if(Number(anzGraphs)>2)
				{
					setTimeout(function()
					{
						bedienung(chartID+'+02+'+leftLimit+'+'+rightLimit+'+00');
						if(Number(anzGraphs)>3)
						{
							setTimeout(function()
							{
								bedienung(chartID+'+03+'+leftLimit+'+'+rightLimit+'+00');
								
							}, 200);
						}
					}, 200);
				}
			}, 200);
		}
	}, 200);
}

