// WebOutHkGen() shows Hk Parameters via a Weboutput()
//
// input:
// - HkName:      Name of the Hk as shown in the WebOutput()
// - ID:          the WebOutput(ID)[]
// - GA_Vl        GA of Vorlauf Temp
// - GA_Rl        Ga of Ruecklauf Temp
// - GA_HkModeReq Requested Hk Mode in UVR1611 u16
// - Ga_HkModeAct Actuel Hk Mode in UVR1611 u16
// - GA_PID       Burner PID in 16u
// - GA_bPump     Pump Status (running?) b1
// - GA_wbFrost    Warning: Frost b1
// - GA_bGenHzON   Heatingting system general status ON/OFF
//
//
:begin SpWebOutHkGen( HkName,Id, GabGenHzON,GaVl,GaRl,GabPump,GaPID,GaHkModeReq,GaHkModeAct,GaOverTempC,GaOverTempW,GabFrost,GaMax3 )
//
// HTML style color strings
//
:var strColorBase@
strColorBase@ = $black$

:var strColorUnused@
strColorUnused@ = $grey$

:var strColorNormal@
strColorNormal@ = $green$

:var strColorCaution@ 
strColorCaution@ = $DarkOrange$

:var strColorWarning@
strColorWarning@ = $red$
//
// HTML text
//
:var strND@
strND@ = $ND$

:var strON@
strON@   = $ON$

:var strOFF@
strOFF@  = $OFF$

:var strTitle@
strTitle@ = HkName

:var html@
html@ = $?$c24000

//
// HTML variables
//
:var strColorHkStatus@
strColorHkStatus@ = strColorUnused@
:var strHkStatus@
strHkStatus@ = strND@

:var strTemp@
strTemp@ = $nil$
:var strColorVLRL@
strColorVLRL@ = strColorUnused@
:var fMaxTempDiff@
fMaxTempDiff@ = 5f16

:var strColorPump@
strColorPump@ = strColorUnused@
:var strPump@
strPump@       = strND@

:var strColorPID@
strColorPID@ = strColorUnused@
:var strPID@ 
strPID@ = strND@

:var strColorHkMode@
strColorHkMode@   = strColorUnused@
:var strHkMode@
strHkMode@        = strND@

:var strOverT@
strOverT@         = $$
:var strCOverTC@
strCOverTC@        = $<span style= color:$+ strColorCaution@ +$> OverTemp</span> $  

:var strCOverTW@
strCOverTW@        = $<span style= color:$+ strColorWarning@ +$ > OverTemp</span> $  

:var strFrost@
strFrost@ = $$
:var strCFrost@  
strCFrost@        = $<span style= color:$+ strColorWarning@ +$ > Frost</span> $  
//
/////////////////////////////////////////////////////////////////////////////
///
:var STARTDELAY@
STARTDELAY@    = 2000u64
//////////////////////
// iDelay is cycle time in minutes
//
:var iDelay@
iDelay@ = 1
if( after(systemstart(), STARTDELAY@) or cycle(iDelay@,5))then{

   if GabGenHzON then{
		strColorHkStatus@ = strColorNormal@;
		strHkStatus@      = strON@;      
		}endif ;
	if(!GabGenHzON) then{
	    strColorHkStatus@ = strColorUnused@;
	    strHkStatus@      = strOFF@;
	    }endif;

   strTemp@ =  stringformat(convert( GaVl,0f16 ) ,4,3,2,0 ) + $C/$ +    \\
               stringformat(convert( GaRl,0f16 ) ,4,3,2,0 ) + $C$ ;

   strColorVLRL@ = strColorNormal@;
   if( convert(GaVl,0f16) - convert( GaRl,0f16 ) >  fMaxTempDiff@ ) then{
      strColorVLRL@ = strColorCaution@;
      }endif;

   if GabPump then{
      strPump@       = strON@;
      strColorPump@  = strColorNormal@;
      }endif ;
   if !GabPump then{
      strPump@       = strOFF@;
      strColorPump@  = strColorUnused@;
      }endif ;

   strColorPID@ =  strColorUnused@ ;
   if (convert(GaPID, 0u16) > 20u16) then{ strColorPID@ = strColorNormal@ }endif;
   strPID@ =   stringformat(convert(GaPID,0u16),0,3,3,3 )+$%$; 

   if ( GaMax3 > 0 ) then{ strPID@ = stringformat( convert(GaMax3, 0u16)*100u16/255u16,0,3,3,3 ) + $%$ } endif;
   if ( convert(GaMax3, 0u16)*100u16/255u16 > 95u16 ) then{ strColorPID@ = strColorCaution@ }endif;

   strColorHkMode@ = strColorNormal@;

   strHkMode@ = strND@;
   if( convert(GaHkModeAct,0u16) == UVR_NORMAL )      then{ strHkMode@ = $high$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_ABGESENKT )   then{ strHkMode@ = $low$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_AUTO)         then{ strHkMode@ = $auto$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_SBY)          then{ strHkMode@ = $frost$} endif; 
   if( convert(GaHkModeAct,0u16) == UVR_INTERN )      then{ strHkMode@ = $intern$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_ERROR )       then{strHkMode@ = $error$;strColorHkMode@ = strColorWarning@;} endif;

   strOverT@ = $$;
   if(GaOverTempC) then{strOverT@ = strCOverTC@} endif;
   if(GaOverTempW) then{strOverT@ = strCOverTW@} endif;

   strFrost@ = $$;
   if( GabFrost ) then{strFrost@ = strCFrost@}endif;
/////////////////////////////////////////////////////////////////////////////////////
// the <style> in the <body> part of the <html> causes problems
// with JSON. All <style> tags ar moved ino html
// <style is for refernce only
//       
//style1@ =  $<style  >
//    .head   { margin:0 0 0 0; font-size: 15px;background-color: lightgrey; }
//    .line1   { display:flex; width:100%; align-content: space-between; font-weight:bold;font-size: 12px;}
//    .col1   { flex: 0 0 7em;  background-color: lightgrey;}
//    .col2   { flex: 0 0 9em; background-color: lightgrey;}
//    .col3   { flex: 0 0 6em;  background-color: lightgrey;}
//    .col4   { flex: 0 0 7em;  background-color: lightgrey;}
//    .col5   { flex: 0 0 7em;  background-color: lightgrey;}
//     </style>
//    $;
//
//html@ = $<h2 class= head  >$+ HkName +$</h2>
//    <div  class= line1 >
//        <div class= col1 >Hk: <span style= color:$+ strColorHkStatus@ +$ >
//        $+ strHkStatus@ +$</span></div>
//        <div class =  col2 >VL/RL: <span style = color:$+ strColorVLRL@ +$ >
//        $+ strTemp@ +$</span></div>
//        <div class =  col3  >Pump: <span style = color:$+ strColorPump@ +$ >
//        $+ strPump@ +$</span> </div>
//        <div class =  col4 >Load: <span style = color:$+ strColorPID@ +$ >
//         $+  strPID@ +$</span></div>
//    </div>
//    <div class =  line1 >
//        <div class=  col1 >Mode: <span style = color:$+ strColorHkMode@ +$ >
//        $+ strHkMode@ +$</span> </div>
//        <div class = col2>$+ strOverT@    +$</div>
//        <div class =  col3  >$+ strFrost@   +$</div>
//        <div   class =  col4 >       </div>
//    </div>
//    $;

html@ = $<h2 style = 'margin:0 0 0 0; font-size: 15px;background-color: lightgrey;'  >$+ HkName +$</h2>
    <div  style = 'display:flex; width:100%; align-content: space-between; font-weight:bold;font-size: 12px;' >
        <div style = 'flex: 0 0 7em;  background-color: lightgrey;'>
        Hk: <span style= color:$+ strColorHkStatus@ +$ >
        $+ strHkStatus@ +$</span></div>
        <div style = 'flex: 0 0 9em; background-color: lightgrey;' >
        VL/RL: <span style = color:$+ strColorVLRL@ +$ >
        $+ strTemp@ +$</span></div>
        <div style = 'flex: 0 0 6em;  background-color: lightgrey;'  >
        Pump: <span style = color:$+ strColorPump@ +$ >
        $+ strPump@ +$</span> </div>
        <div style = 'flex: 0 0 7em;  background-color: lightgrey;' >
        Load: <span style = color:$+ strColorPID@ +$ >
         $+  strPID@ +$</span></div>
    </div>
    <div style = 'display:flex; width:100%; align-content: space-between; font-weight:bold;font-size: 12px;' > 
        <div style = 'flex: 0 0 7em;  background-color: lightgrey;'>
        Mode: <span style = color:$+ strColorHkMode@ +$ >
        $+ strHkMode@ +$</span> </div>
        <div style = ' flex: 0 0 9em; background-color: lightgrey;'>$+ strOverT@    +$</div>
        <div style = 'flex: 0 0 6em;  background-color: lightgrey;'  >$+ strFrost@   +$</div>
        <div   style = 'flex: 0 0 7em;  background-color: lightgrey;' >       </div>
    </div>                                                    
    $;

   weboutput( Id,html@);
 }endif
:end
///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// SpWebButtonMEGFrost( ) is used to controll the Frost mode of the
// Merten MEG6241 RoomTemperatur Controller via a Button in the [WebServer]
//
// input:
//  - ID: Button ID
//  - GASetFrost(out): GA to set Frost Mode. 0b01
//  - GAStFrost(in): status frost mode 0b01
//  - GATsoll(in): Soll temperatur f16
//  - GATist(in): Ist Temperatur, f16
//
:begin SpWebButtonMEGFrost(ID,GASetFrost,GAStFrost,GATsoll,GATist )
:var strOut@
strOut@     = $$
:var bFrost@
bFrost@     = 0b01

if( change(GATsoll or GATist )) then strOut@ =  $Ist:$\\
                                            +stringformat( convert(GATist,0f16),4,3,2,0)\\
                                            +$C/Soll:$ \\
                                            +stringformat( convert(GATsoll,0f16),4,3,2,0)\\
                                            +$C$ endif

if( change(strOut@ ) or change( GAStFrost )) then{
        if( GAStFrost )  then webdisplay( ID,strOut@,ICE,DARKRED,GREY ) endif;
        if( !GAStFrost ) then webdisplay( ID,strOut@,ICE,DISPLAY,GREY ) endif;
        bFrost@ = GAStFrost;
        }endif

if( button(ID) != 0 ) then bFrost@ = !bFrost@ endif
if( change(bFrost@) ) then write(GASetFrost,bFrost@ )endif
:end
/////////////////////////////////////////////////////////////////////////////////////////
//
// shifter for MDT AKH Heater controller
// This shifter uses a 3 button shifter control:
// button 1: temperatur UP
// button 2: mode control, cycels throuh: Komfort,Sby, Night, Frost
// button 3: temperatur DOWN
// Text Display:
// - Temp IST
// - Temp SOLL
// - Valve load in %
//////////////////////
// IN:
// ID:          button ID
// GAshift:     GA for temp UP/DOWN shift   (OUT)
// GAsetHVAC:   GA for AKH control Mode     (OUT)
// GAgetHVAC    GA for AKH HVAC status      (IN)
// GATmpSoll    GA for soll temperatur      (IN)
// GATmpIst     GA for Ist Temperatur       (IN)
// GALoad       GA for valve load           (IN)
// 
/////////////////////////////////////////////////////////////////////////
// MDT HVCA Mode (HEX)
// Komfort  0x01
// SBY      0x02
// Night    0x03
// frost    0x04
//
//////////////////////////////////////////////////////////////////////////////
//
:begin SpShifterAKH(ID,GAshift,GAsetHVAC,GAgetHVAC,GATmpSoll,GATmpIst,GALoad )
:var strOut@
strOut@     =$ Test $
:var strHVAC@
strHVAC@    = $blue$
:var fontWeight@
fontWeight@ = $normal$
:var Mode@
Mode@       = DARKRED
:var nextM@
nextMode@   = HZ_MDT_KOMFORT

///////////////////////////////////////////////////////////////////////////
 //
if( button(ID) == 1) then write( GAshift,EIN ) endif
if( button(ID) == 3) then write( GAshift,AUS ) endif
if( button(ID) == 2) then write( GAsetHVAC,nextMode@ ) endif

if change( GAgetHVAC) or systemstart() then{ 
    fontWeight@ = $normal$;
    if(GAgetHVAC == HZ_MDT_KOMFORTst ) then{
        strHVAC@    = $green$;
        Mode@       = STATE6;
        fontWeight@ = $bold$;
        nextMode@   = HZ_MDT_SBY 
        }endif;
    if(GAgetHVAC == HZ_MDT_SBYst )    then{
        strHVAC@    = $aqua$;
        Mode@       = STATE5;
        nextMode@   = HZ_MDT_NIGHT
        }endif;
    if(GAgetHVAC == HZ_MDT_NIGHTst ) then{
        strHVAC@    = $blue$;
        Mode@       = STATE4;
        nextMode@   = HZ_MDT_FROST
        }endif;
    if(GAgetHVAC == HZ_MDT_FROSTst )then{
        strHVAC@    = $fuchsia$;
        Mode@       = DISPLAY;
        nextMode@   = HZ_MDT_KOMFORT
        }endif;
}endif
//
if( change( GAgetHVAC) or change( GATmpSoll) or change(GATmpIst) or change(GALoad) ) then{
   strOut@ = $Ist:$\\
             +stringformat( convert(GATmpIst,0f16),4,3,2,1)\\
             +$C/Soll:<span style =color:$+strHVAC@
             +$;font-weight:$+fontWeight@+$>$ \\
             +stringformat( convert(GATmpSoll,0f16),4,3,2,1)\\
             +$C</span>,$
             +stringformat(convert(GALoad, 0u16)*100u16/255u16,0,3,3,3 )+$%$; 

             webdisplay( ID,strOut@,FLOORHEATING,Mode@,GREY )
   }endif
:end
