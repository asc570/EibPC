// WebOutHkGen() shows Hk Parameters via a Weboutput()
//
// input:
// - HkName:      Name of the Hk as shown in the WebOutput()
// - ID:          the WebOutput(ID)[]
// - GA_Vl        GA of Vorlauf Temp
// - GA_Rl        Ga of Ruecklauf Temp
// - GA_HkModeReq Requested Hk Mode in UVR1611 u16
// - Ga_HkModeAct Actuel Hk Mode in UVR1611 u16
// - GA_PID       Burner PID in 16u
// - GA_bPump     Pump Status (running?) b1
// - GA_wbFrost    Warning: Frost b1
// - GA_bGenHzON   Heatingting system general status ON/OFF
//
//
:begin SpWebOutHkGen( HkName,Id, GabGenHzON,GaVl,GaRl,GabPump,GaPID,GaHkModeReq,GaHkModeAct,GaOverTempC,GaOverTempW,GabFrost,GaMax3 )
//
// HTML style color strings
//
:var strColorBase@
strColorBase@ = $black$

:var strColorUnused@
strColorUnused@ = $grey$

:var strColorNormal@
strColorNormal@ = $green$

:var strColorCaution@ 
strColorCaution@ = $DarkOrange$

:var strColorWarning@
strColorWarning@ = $red$
//
// HTML text
//
:var strND@
strND@ = $ND$

:var strON@
strON@   = $ON$

:var strOFF@
strOFF@  = $OFF$

:var strTitle@
strTitle@ = HkName

:var html@
html@ = $?$c8000

//
// HTML variables
//
:var strColorHkStatus@
strColorHkStatus@ = strColorUnused@
:var strHkStatus@
strHkStatus@ = strND@

:var strTemp@
strTemp@ = $nil$
:var strColorVLRL@
strColorVLRL@ = strColorUnused@
:var fMaxTempDiff@
fMaxTempDiff@ = 5f16

:var strColorPump@
strColorPump@ = strColorUnused@
:var strPump@
strPump@       = strND@

:var strColorPID@
strColorPID@ = strColorUnused@
:var strPID@ 
strPID@ = strND@

:var strColorHkMode@
strColorHkMode@   = strColorUnused@
:var strHkMode@
strHkMode@        = strND@

:var strOverT@
strOverT@         = $$
:var strCOverTC@
strCOverTC@        = $<span style= color:$+ strColorCaution@ +$> OverTemp</span> $  

:var strCOverTW@
strCOverTW@        = $<span style= color:$+ strColorWarning@ +$ > OverTemp</span> $  

:var strFrost@
strFrost@ = $$
:var strCFrost@  
strCFrost@        = $<span style= color:$+ strColorWarning@ +$ > Frost</span> $  
//
/////////////////////////////////////////////////////////////////////////////
///
:var STARTDELAY@
STARTDELAY@    = 2000u64
//////////////////////
// iDelay is cycle time in minutes
//
:var iDelay@
iDelay@ = 1
if( after(systemstart(), STARTDELAY@) or cycle(iDelay@,5))then{

   if GabGenHzON then{
		strColorHkStatus@ = strColorNormal@;
		strHkStatus@      = strON@;      
		}endif ;
	if(!GabGenHzON) then{
	    strColorHkStatus@ = strColorUnused@;
	    strHkStatus@      = strOFF@;
	    }endif;

   strTemp@ =  stringformat(convert( GaVl,0f16 ) ,4,3,2,0 ) + $C/$ +    \\
               stringformat(convert( GaRl,0f16 ) ,4,3,2,0 ) + $C$ ;

   strColorVLRL@ = strColorNormal@;
   if( convert(GaVl,0f16) - convert( GaRl,0f16 ) >  fMaxTempDiff@ ) then{
      strColorVLRL@ = strColorCaution@;
      }endif;

   if GabPump then{
      strPump@       = strON@;
      strColorPump@  = strColorNormal@;
      }endif ;
   if !GabPump then{
      strPump@       = strOFF@;
      strColorPump@  = strColorUnused@;
      }endif ;

   strColorPID@ =  strColorUnused@ ;
   if (convert(GaPID, 0u16) > 20u16) then{ strColorPID@ = strColorNormal@ }endif;
   strPID@ =   stringformat(convert(GaPID,0u16),0,3,3,3 )+$%$; 

   if ( GaMax3 > 0 ) then{ strPID@ = stringformat( convert(GaMax3, 0u16)*100u16/255u16,0,3,3,3 ) + $%$ } endif;
   if ( convert(GaMax3, 0u16)*100u16/255u16 > 95u16 ) then{ strColorPID@ = strColorCaution@ }endif;

   strColorHkMode@ = strColorNormal@;

   strHkMode@ = strND@;
   if( convert(GaHkModeAct,0u16) == UVR_NORMAL )      then{ strHkMode@ = $high$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_ABGESENKT )   then{ strHkMode@ = $low$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_AUTO)         then{ strHkMode@ = $auto$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_SBY)          then{ strHkMode@ = $frost$} endif; 
   if( convert(GaHkModeAct,0u16) == UVR_INTERN )      then{ strHkMode@ = $intern$} endif;
   if( convert(GaHkModeAct,0u16) == UVR_ERROR )       then{strHkMode@ = $error$;strColorHkMode@ = strColorWarning@;} endif;

   strOverT@ = $$;
   if(GaOverTempC) then{strOverT@ = strCOverTC@} endif;
   if(GaOverTempW) then{strOverT@ = strCOverTW@} endif;

   strFrost@ = $$;
   if( GabFrost ) then{strFrost@ = strCFrost@}endif;
/////////////////////////////////////////////////////////////////////////////////////
// the <style> in the <body> part of the <html> causes problems
// with JSON. All <style> tags ar moved ino html
// <style is for refernce only
//       
//style1@ =  $<style  >
//    .head   { margin:0 0 0 0; font-size: 15px;background-color: lightgrey; }
//    .line1   { display:flex; width:100%; align-content: space-between; font-weight:bold;font-size: 12px;}
//    .col1   { flex: 0 0 7em;  background-color: lightgrey;}
//    .col2   { flex: 0 0 9em; background-color: lightgrey;}
//    .col3   { flex: 0 0 6em;  background-color: lightgrey;}
//    .col4   { flex: 0 0 7em;  background-color: lightgrey;}
//    .col5   { flex: 0 0 7em;  background-color: lightgrey;}
//     </style>
//    $;
//
//html@ = $<h2 class= head  >$+ HkName +$</h2>
//    <div  class= line1 >
//        <div class= col1 >Hk: <span style= color:$+ strColorHkStatus@ +$ >
//        $+ strHkStatus@ +$</span></div>
//        <div class =  col2 >VL/RL: <span style = color:$+ strColorVLRL@ +$ >
//        $+ strTemp@ +$</span></div>
//        <div class =  col3  >Pump: <span style = color:$+ strColorPump@ +$ >
//        $+ strPump@ +$</span> </div>
//        <div class =  col4 >Load: <span style = color:$+ strColorPID@ +$ >
//         $+  strPID@ +$</span></div>
//    </div>
//    <div class =  line1 >
//        <div class=  col1 >Mode: <span style = color:$+ strColorHkMode@ +$ >
//        $+ strHkMode@ +$</span> </div>
//        <div class = col2>$+ strOverT@    +$</div>
//        <div class =  col3  >$+ strFrost@   +$</div>
//        <div   class =  col4 >       </div>
//    </div>
//    $;

html@ = $<h2 style = 'margin:0 0 0 0; font-size: 15px;background-color: lightgrey;'  >$+ HkName +$</h2>
    <div  style = 'display:flex; width:100%; align-content: space-between; font-weight:bold;font-size: 12px;' >
        <div style = 'flex: 0 0 7em;  background-color: lightgrey;'>
        Hk: <span style= color:$+ strColorHkStatus@ +$ >
        $+ strHkStatus@ +$</span></div>
        <div style = 'flex: 0 0 9em; background-color: lightgrey;' >
        VL/RL: <span style = color:$+ strColorVLRL@ +$ >
        $+ strTemp@ +$</span></div>
        <div style = 'flex: 0 0 6em;  background-color: lightgrey;'  >
        Pump: <span style = color:$+ strColorPump@ +$ >
        $+ strPump@ +$</span> </div>
        <div style = 'flex: 0 0 7em;  background-color: lightgrey;' >
        Load: <span style = color:$+ strColorPID@ +$ >
         $+  strPID@ +$</span></div>
    </div>
    <div style = 'display:flex; width:100%; align-content: space-between; font-weight:bold;font-size: 12px;' > 
        <div style = 'flex: 0 0 7em;  background-color: lightgrey;'>
        Mode: <span style = color:$+ strColorHkMode@ +$ >
        $+ strHkMode@ +$</span> </div>
        <div style = ' flex: 0 0 9em; background-color: lightgrey;'>$+ strOverT@    +$</div>
        <div style = 'flex: 0 0 6em;  background-color: lightgrey;'  >$+ strFrost@   +$</div>
        <div   style = 'flex: 0 0 7em;  background-color: lightgrey;' >       </div>
    </div>                                                    
    $;

   weboutput( Id,html@);
 }endif
:end
///////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// SpWebButtonMEGFrost( ) is used to controll the Frost mode of the
// Merten MEG6241 RoomTemperatur Controller via a Button in the [WebServer]
//
// input:
//  - ID: Button ID
//  - GASetFrost(out): GA to set Frost Mode. 0b01
//  - GAStFrost(in): status frost mode 0b01
//  - GATsoll(in): Soll temperatur f16
//  - GATist(in): Ist Temperatur, f16
//
:begin SpWebButtonMEGFrost(ID,GASetFrost,GAStFrost,GATsoll,GATist )
:var strOut@
strOut@     = $$
:var bFrost@
bFrost@     = 0b01

if( change(GATsoll or GATist )) then strOut@ =  $Ist:$\\
                                            +stringformat( convert(GATist,0f16),4,3,2,0)\\
                                            +$C/Soll:$ \\
                                            +stringformat( convert(GATsoll,0f16),4,3,2,0)\\
                                            +$C$ endif

if( change(strOut@ ) or change( GAStFrost )) then{
        if( GAStFrost )  then webdisplay( ID,strOut@,ICE,DARKRED,GREY ) endif;
        if( !GAStFrost ) then webdisplay( ID,strOut@,ICE,DISPLAY,GREY ) endif;
        bFrost@ = GAStFrost;
        }endif

if( button(ID) != 0 ) then bFrost@ = !bFrost@ endif
if( change(bFrost@) ) then write(GASetFrost,bFrost@ )endif
:end
/////////////////////////////////////////////////////////////////////////////////////////
//
// shifter for MDT AKH Heater controller
// This shifter uses a 3 button shifter control:
// button 1: temperatur UP
// button 2: mode control, cycels throuh: Komfort,Sby, Night, Frost
// button 3: temperatur DOWN
// Text Display:
// - Temp IST
// - Temp SOLL
// - Valve load in %
// - shows CROSSCIRCLE when in Lock Mode
//////////////////////
// IN:
// ID:          button ID
// GAshift:     GA for temp UP/DOWN shift   (OUT)
// GAsetHVAC:   GA for AKH control Mode     (OUT)
// GAgetHVAC    GA for AKH HVAC status      (IN)
// GATmpSoll    GA for soll temperatur      (IN)
// GATmpIst     GA for Ist Temperatur       (IN)
// GALoad       GA for valve load           (IN)
// GAForceLock  GA for lock lock valve in open position (IN)
// 
/////////////////////////////////////////////////////////////////////////
// MDT HVCA Mode (HEX)
// Komfort  0x01
// SBY      0x02
// Night    0x03
// frost    0x04
//
//////////////////////////////////////////////////////////////////////////////
//
:begin SpShifterAKH(ID,Icon,GAshift,GAsetHVAC,GAgetHVAC,GATmpSoll,GATmpIst,GALoad,GAFoceLock )
:var strOut@
strOut@     =$ Test $
:var strHVAC@
strHVAC@    = $blue$
:var fontWeight@
fontWeight@ = $normal$
:var Mode@
Mode@       = DARKRED
:var nextM@
nextMode@   = HZ_MDT_KOMFORT
:var Icon@
Icon@       = Icon

///////////////////////////////////////////////////////////////////////////
//
if( button(ID) == 1) then write( GAshift,EIN ) endif
if( button(ID) == 3) then write( GAshift,AUS ) endif
if( button(ID) == 2) then write( GAsetHVAC,nextMode@ ) endif

if change( GAgetHVAC) or change( GAFoceLock) or systemstart() then{ 
    fontWeight@ = $normal$;
    Icon@       = Icon;
    if(GAgetHVAC == HZ_MDT_KOMFORTst ) then{
        strHVAC@    = $green$;
        Mode@       = STATE6;
        fontWeight@ = $bold$;
        nextMode@   = HZ_MDT_SBY 
        }endif;
    if(GAgetHVAC == HZ_MDT_SBYst )    then{
        strHVAC@    = $aqua$;
        Mode@       = STATE5;
        nextMode@   = HZ_MDT_NIGHT
        }endif;
    if(GAgetHVAC == HZ_MDT_NIGHTst ) then{
        strHVAC@    = $blue$;
        Mode@       = STATE4;
        nextMode@   = HZ_MDT_FROST
        }endif;
    if(GAgetHVAC == HZ_MDT_FROSTst )then{
        strHVAC@    = $fuchsia$;
        Mode@       = DISPLAY;
        nextMode@   = HZ_MDT_KOMFORT
        }endif;
}endif
//
if( change( GAgetHVAC) or change( GATmpSoll) or change(GATmpIst) or change(GALoad) or change( GAFoceLock )) then{
    if(GAFoceLock == 1b01) then{
        Icon@   = CROSSCIRCLE;
        Mode@   = BRIGHTRED
        }endif;
   strOut@ = $Ist:$\\
             +stringformat( convert(GATmpIst,0f16),4,3,2,1)\\
             +$C/Soll:<span style =color:$+strHVAC@
             +$;font-weight:$+fontWeight@+$>$ \\
             +stringformat( convert(GATmpSoll,0f16),4,3,2,1)\\
             +$C</span>,$
             +stringformat(convert(GALoad, 0u16)*100u16/255u16,0,3,3,3 )+$%$; 

             webdisplay( ID,strOut@,Icon@,Mode@,GREY )
   }endif
:end
/////////////////////////////////////////////////////////////////////////////
// button for MDT AKH Heater controller, RAD and FBH
// uses a button control
// - shows status (On/Off/ Locked)
// - switches On/OFF
// - icon for RAD or FBH must be given in function
// - shows transit 
// ID:          button ID
// Icon:        icon for RAD or FBH
// GAsetValve:  set valve On/Off (OUT)
// GAgetValve   get the valve position On/Off (IN)
// GAgetLock    get LockOpen Information (IN)
//
:begin SpButtonAKH(ID,Icon,GAsetValve,GAgetValve,GAgetLock)
:var bNext@
//bNext@ = 0b01
bNext@      = !GAgetValve
:var Icon@
Icon@       = Icon
:var Mode@
Mode@       = ACTIVE
:var strInfo@
strInfo@    =$$
initga(GAgetLock);
initga(GAgetValve);
if after(systemstart(),  3000u64) then write(GAsetValve,GAgetValve) endif

if change(GAgetValve) then bNext@ = !GAgetValve endif
if button(ID) != 0 then write(GAsetValve,bNext@) endif

if change(GAgetValve) or change(GAsetValve) or change(GAgetLock) then{
    if GAgetLock then Icon@ = CROSSCIRCLE; Mode@ = BRIGHTRED; strInfo@ = $locked open$ endif;
    if !GAgetLock then{ 
        if GAsetValve == GAgetValve and GAgetValve   then Mode@ = ACTIVE; Icon@ = Icon; strInfo@ = $On$ endif;
        if GAsetValve == GAgetValve and !GAgetValve  then Mode@ = DARKRED;Icon@ = Icon; strInfo@ = $Off$ endif;
        if GAsetValve != GAgetValve then Icon@ = UPDATE; Mode@ = ACTIVE; strInfo@ = $<span style= 'color:red'>transit</span>$ endif
        }endif;
    webdisplay(ID,strInfo@,Icon@,Mode@,GREY)
    }endif
:end
//////////////////////////////////////////////////////////////////////////////////
// Shifter for Merten EMO Valve actuator
// uses a 3 button shifter to adjust tze % value of the valve
// - show soll % / ist % of valve position
// - big step adjustment by pushing button 2 (0%,50%,100%)
// - small adjustment in 3% steps by putton 1 & 3.
// - changes button 2 when in lock Mode
// Remark: has to poll the GAget position, Initials GAset with GAget by writing to GAset!!
//
// ID:      button ID
// Icon:    Icon for RAD or FBH
// GAset:   GA to set valve position (OUT)
// GAget:   GA for actual valve position (IN)
// GAlock:  GA for valve lock (IN)
//
:begin ShifterEMO(ID,Icon,GAset,GAget,GAlock)
:var Step@
Step@       = 8
:var cyMinute@
cyMinute    = 1
:var strOut@
strOut@     = $$
:var Icon@
Icon@       =Icon
:var Mode@
Mode@       = ACTIVE
:var nextValve@
nextValve@   = 0%
//
if systemstart() then write(GAset, GAget) endif;
if(cycle(cyMinute,0)) then read(GAget) endif
if( button(ID) == 2) then{
    if GAset < 128      then nextValve@ = 128   endif;
    if GAset >= 128     then nextValve@ = 255   endif;
    if GAset > 254      then nextValve@ = 0     endif;
    write(GAset, nextValve@)
    }endif
if( button(ID) == 1) then{
    if(GAset >= 255 -Step@) then write(GAset,255) else write(GAset, GAset + Step@) endif;
    }endif
if( button(ID) == 3) then{
    if(GAset <= Step@) then write(GAset,0) else write(GAset, GAset - Step@) endif;
    }endif
if change(GAset) or change(GAget) or change(GAlock) then{
    if(GAget == 0)      then Mode@ = INACTIVE endif;
    if(GAget > 0)       then Mode@ = STATE4 endif;
    if(GAget >= 85)     then Mode@ = STATE5 endif;
    if(GAget >= 170)    then Mode@ = STATE6 endif;
    if(GAget > 254)     then Mode@ = STATE8 endif;
    if(GAlock == 0b01) then Icon@  = Icon endif;
    if(GAlock == 1b01) then{ Icon@ = CROSSCIRCLE;Mode@ = BRIGHTRED }endif;
        strOut@ = $Soll:$\\
        + stringformat(convert(GAset,0u16)*100u16/255u16,0,3,3,3 )+$% / Ist:$\\
        + stringformat(convert(GAget,0u16)*100u16/255u16,0,3,3,3 )+$%$; 
        webdisplay(ID,strOut@,Icon@,Mode@,GREY)
        }endif

:end
/////////////////////////////////////////////////////////////////////////////////////////
// Button for switching OFF/ON the timer for the morning Boost in kueche
// ID:              button ID
// bBlockRGBoost:   remanent flag for the ON/OFF state (IN)
// GAlockEgBoot:    GA for the ON/OFF switching (OUT)
// remark:          switching is done via the GA. The nBlockEGBoot flag in (IN) variable   
//
:begin SpWebButtonBlockEgBoost(ID,bBlockEGBoost,GAblockEgBoost)
:var strOut@
strOut@     = $$
:var Icon@
Icon@       = SWITCH
:var State@
State@      = ACTIVE
if( button(ID) != 0 ) then write(GAblockEgBoost, !bBlockEGBoost) endif
if bBlockEGBoost  then Icon@ = CROSSCIRCLE; State@ = INACTIVE; strOut@ = $Auto Boost OFF$ endif
if !bBlockEGBoost then Icon@ = OKCIRCLE;    State@ = ACTIVE; strOut@ = $Auto Boost ON$ endif
if change(bBlockEGBoost) then webdisplay( ID,strOut@,Icon@,State@,GREY ) endif
:end
////////////////////////////////////////////////////////////////////////////////////////
// Shifter for selecting FBH HK mode (Auto,High,Low)
// using a 4 button shifter. Right button shows act status.
// ID:          shifter ID
// GAgetMode    UVR mode(IN)
// GAsetMode    UVR mode (OUT)
//
// rem: EibPC has some problems to interprete the incomming UVR mode. When f16 is used by EibPC
//      you have to use the scale faktor 100 on the EIBconverter ( presently only for HK3)
//
:begin SpShifterUVRmode(ID,GAgetMode,GAsetMode)
:var strOut@
strOut@         = $error$
:var Icon@
Icon@           = UPDATE
:var State@
State@          = ACTIVE
initga(GAgetMode);
if after(systemstart(),  2000u64) then write(GAsetMode,GAgetMode) endif

if button(ID) == 1 then write(GAsetMode, UVR_AUTO)      endif
if button(ID) == 2 then write(GAsetMode, UVR_NORMAL)    endif
if button(ID) == 3 then write(GAsetMode, UVR_ABGESENKT) endif
if GAgetMode != GAsetMode then{
    Icon@   = UPDATE;
    strOut@ = $transit$;
    }endif
if GAgetMode == GAsetMode then{
    if GAgetMode == UVR_AUTO then{
        Icon@   = CLOCK;
        State@  = ACTIVE;
        strOut@ = $Auto$
        }endif;
    if GAgetMode == UVR_NORMAL then{
        Icon@    = WEATHER;
        State@  = ACTIVE;
        strOut@ = $high$
        }endif;
    if GAgetMode == UVR_ABGESENKT then{
        Icon@   = NIGHT;
        State@  = ACTIVE;
        strOut@ = $low$
        }endif;
    }endif
if change(GAgetMode) or change(GAsetMode) then webdisplay(ID,strOut@,Icon@,State@,GREY) endif
:end
/////////////////////////////////////////////////////////////////////////////////////
// A 3-button Shifter (UP,Status,DOWN) to controll FBH Dach room east.
// - use button 2 to switch ON/OFF FBH in romm east
// - If FBH is ON, HK4 gets temperatue via sensor
// - If FBH is OFF, a fixed temperatue value tGen@ is provided
// - The output temp (input for UVR1611) is modified by a correction temp value
// - the temp corr values are descrete for FBH ON and OFF.
// - the temp corr values have to be sored externaly in REM
// ID:              Shifter ID
// GARoomSw:        GA to switch FBH ON/OFF
// GAinT            GA room temp (IN)
// GAoutT:          GA corr temp for UVR1611 (OUT)
// GAsetValve:      GA to set FBH valve ON/OFF (OUT)
// GAgetValve:      GA to get FBH valve position ON/OFF (IN)
// GAtShiftRoom:    GA to shift temp room corr
// GAtShiftGen:     GA to shift temo gen corr
// bSwitch          external REM status switch 
// corRoom:         external REM room cor value
// corGen:          external REM gen cor value
// remark:          the handling of the 3 external REM values mut be providet by 
//                  external funktions:
//                  1. read from REM
//                  2. write to REM
//                  3. set cor  value (room & gen) when an event is sent on  GAtShiftxxx
//
:begin SpShifterUVRost(ID,GARoomSw,GAinT,GAoutT,GAsetValve,GAgetValve,GAtShiftRoom,GAtShiftGen,bSwitch,corRoom,corGen)
:var tGen@
tGen@        = 21.0f16
:var strOut@
strOut@     = $$
:var Icon@
Icon@       = SWITCH
:var State@
State@      = ACTIVE

if change(bSwitch) then write(GAsetValve,bSwitch) endif

if button(ID) == 1 then{
    if bSwitch  then write(GAtShiftRoom, EIN) endif;
    if !bSwitch then write( GAtShiftGen, EIN) endif
    }endif
if button(ID) == 3 then{
    if bSwitch  then write(GAtShiftRoom, AUS) endif;
    if !bSwitch then write( GAtShiftGen, AUS) endif
    }endif
if button(ID) == 2 then write(GARoomSw,!bSwitch) endif
if change(bSwitch) or change(GARoomSw) or change(GAinT) or change(GAsetValve) or change(GAgetValve) or change(corRoom) or change(corGen) then{
   strOut@ =  $Ist:$ + stringformat( convert(GAinT,0f16),4,3,2,1) + $C,corr:$; 
   if bSwitch != GAgetValve then Icon@ = UPDATE endif;
   if bSwitch == GAgetValve and bSwitch  then Icon@ = FLOORHEATING endif;
   if bSwitch == GAgetValve and !bSwitch then Icon@ = CROSSCIRCLE  endif;
   if bSwitch  then write(GAoutT,GAinT - corRoom) endif;
   if !bSwitch then write(GAoutT,tGen@ - corGen)  endif;
   if GAgetValve   then strOut@ = strOut@ + stringformat(convert(corRoom,0f16),4,3,2,1)    + $ , <span style= 'color:green;font-weight:bold'>ON</span>$ endif;
   if !GAgetValve  then strOut@ = strOut@ + stringformat(convert(corGen,0f16),4,3,2,1)     + $ , <span style= 'font-weight:bold'>OFF</span>$ endif;
   webdisplay(ID,strOut@,Icon@,State@,GREY)
    }endif
:end
///////////////////////////////////////////////////////////////////////////////////////////
// Button control to switch UVR1611 ON/OFF
// - shows transit
// - shows outside Air Tem
// ID:          Button ID
// GAsetON      GA to switch UVR ON/OFF (OUT)
// GAgetON      GA to get ON/OFF status of UVR (IN)
// GAoT         GA to get Outside Temp
//
:begin SpButtonUVRon(ID,GAsetON,GAgetON,GAoT)
:var strOut@
strOut@     = $$
:var Icon@
Icon@       = UPDATE
:var Next@
Next@       = ON
:var State@
State@      = ACTIVE

initga(GAgetON)
if after(systemstart(),  4000u64) then write(GAsetON,GAgetON) endif
if event(GAgetON) then Next@ = !GAgetON endif;

if button(ID) != 0 then write(GAsetON, Next@) endif;

if change(GAsetON) or change(GAgetON) or change(Next@) or change(GAoT) then{
    strOut@ = $Temp:$ + stringformat( convert(GAoT,0f16),4,3,2,1) + $C,$;
    if GAgetON != GAsetON then Icon@ = UPDATE; State@ = BRIGHTRED; strOut@ = strOut@ + $<span style= 'color:red'>transit</span>$ endif;
    if GAgetON == GAsetON then{
        if GAgetON  then Icon@ = OKCIRCLE;      State@ = ACTIVE;    strOut@ = strOut@ + $<span style= 'color:green;font-weight:bold'>ON</span>$ endif;
        if !GAgetON then Icon@ = CROSSCIRCLE;   State@ = DARKRED;   strOut@ = strOut@ + $OFF$ endif;
        }endif;
        webdisplay(ID,strOut@,Icon@,State@,GREY);
    }endif;
:end
